#!/usr/bin/env python
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–∏—Å—Ç–µ–º—ã —ç–∫—Å–ø–æ—Ä—Ç–∞
"""
import os
import sys
import django

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
sys.path.append(os.path.dirname(os.path.abspath(__file__)))
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'nexus_backend.settings')
django.setup()

from core.models import (
    GameProject, Character, Dialogue, Post, SkillCheck, 
    DialogueOption, Quest, DialogueLog, ExportTemplate
)


def create_test_project():
    """–°–æ–∑–¥–∞–µ—Ç —Ç–µ—Å—Ç–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç —Å –ø–æ–ª–Ω—ã–º –Ω–∞–±–æ—Ä–æ–º –¥–∞–Ω–Ω—ã—Ö"""
    
    print("üéÆ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞ –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞...")
    
    # –°–æ–∑–¥–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –ø—Ä–æ–µ–∫—Ç
    project = GameProject.objects.create(
        name="Torange Plaza Demo",
        description="–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π –ø—Ä–æ–µ–∫—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã —ç–∫—Å–ø–æ—Ä—Ç–∞"
    )
    
    # –°–æ–∑–¥–∞–µ–º –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π
    characters = [
        {
            "name": "Detective Harry",
            "logic": 8,
            "empathy": 6,
            "authority": 7,
            "endurance": 5,
            "rhetoric": 9,
            "drama": 4,
            "conceptualization": 7,
            "visual_calculus": 6,
            "volition": 8,
            "inland_empire": 9,
            "suggestion": 5,
            "espirit_de_corps": 6,
            "pain_threshold": 4,
            "physical_instrument": 3,
            "electrochemistry": 7,
            "shivers": 8,
            "half_light": 5,
            "hand_eye_coordination": 6,
            "perception": 7,
            "reaction_speed": 5,
            "savoir_faire": 4,
            "interfacing": 3,
            "composure": 6,
        },
        {
            "name": "Kim Kitsuragi",
            "logic": 9,
            "empathy": 8,
            "authority": 6,
            "endurance": 7,
            "rhetoric": 7,
            "drama": 5,
            "conceptualization": 8,
            "visual_calculus": 9,
            "volition": 9,
            "inland_empire": 4,
            "suggestion": 6,
            "espirit_de_corps": 8,
            "pain_threshold": 6,
            "physical_instrument": 7,
            "electrochemistry": 3,
            "shivers": 5,
            "half_light": 4,
            "hand_eye_coordination": 8,
            "perception": 9,
            "reaction_speed": 7,
            "savoir_faire": 8,
            "interfacing": 7,
            "composure": 9,
        },
        {
            "name": "Joyce Messier",
            "logic": 6,
            "empathy": 9,
            "authority": 4,
            "endurance": 5,
            "rhetoric": 8,
            "drama": 7,
            "conceptualization": 6,
            "visual_calculus": 5,
            "volition": 7,
            "inland_empire": 8,
            "suggestion": 9,
            "espirit_de_corps": 5,
            "pain_threshold": 3,
            "physical_instrument": 2,
            "electrochemistry": 6,
            "shivers": 7,
            "half_light": 6,
            "hand_eye_coordination": 4,
            "perception": 6,
            "reaction_speed": 4,
            "savoir_faire": 7,
            "interfacing": 5,
            "composure": 8,
        }
    ]
    
    created_characters = []
    for char_data in characters:
        character = Character.objects.create(**char_data)
        created_characters.append(character)
        print(f"  ‚úÖ –°–æ–∑–¥–∞–Ω –ø–µ—Ä—Å–æ–Ω–∞–∂: {character.name}")
    
    # –°–æ–∑–¥–∞–µ–º –¥–∏–∞–ª–æ–≥–∏
    dialogues_data = [
        {
            "title": "–ü–µ—Ä–≤–∞—è –≤—Å—Ç—Ä–µ—á–∞ —Å –ö–∏–º–æ–º",
            "posts": [
                {"speaker": "Kim Kitsuragi", "text": "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –†–µ–≤–∞—à–æ–ª—å, –¥–µ—Ç–µ–∫—Ç–∏–≤. –Ø –ª–µ–π—Ç–µ–Ω–∞–Ω—Ç –ö–∏–º –ö–∏—Ü—É—Ä–∞–≥–∏.", "order": 1},
                {"speaker": "Detective Harry", "text": "–ü—Ä–∏–≤–µ—Ç... –Ø... –∫—Ç–æ —è?", "order": 2},
                {"speaker": "Kim Kitsuragi", "text": "–í—ã –¥–µ—Ç–µ–∫—Ç–∏–≤ –ø–æ–ª–∏—Ü–∏–∏. –ú—ã —Ä–∞–±–æ—Ç–∞–µ–º –Ω–∞–¥ –¥–µ–ª–æ–º –æ–± —É–±–∏–π—Å—Ç–≤–µ.", "order": 3},
                {"speaker": "Detective Harry", "text": "–£–±–∏–π—Å—Ç–≤–æ? –Ø –Ω–µ –ø–æ–º–Ω—é...", "order": 4},
            ],
            "skill_checks": [
                {
                    "skill": "empathy",
                    "difficulty": "medium",
                    "description": "–ü–æ–ø—ã—Ç–∞—Ç—å—Å—è –ø–æ–Ω—è—Ç—å —ç–º–æ—Ü–∏–∏ –ö–∏–º–∞",
                    "success_text": "–í—ã —á—É–≤—Å—Ç–≤—É–µ—Ç–µ, —á—Ç–æ –ö–∏–º –∏—Å–∫—Ä–µ–Ω–Ω–µ —Ö–æ—á–µ—Ç –ø–æ–º–æ—á—å",
                    "failure_text": "–ö–∏–º –∫–∞–∂–µ—Ç—Å—è –æ—Ç—Å—Ç—Ä–∞–Ω–µ–Ω–Ω—ã–º –∏ —Ö–æ–ª–æ–¥–Ω—ã–º"
                },
                {
                    "skill": "logic",
                    "difficulty": "hard",
                    "description": "–í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤–æ—Å–ø–æ–º–∏–Ω–∞–Ω–∏—è –æ –¥–µ–ª–µ",
                    "success_text": "–í–æ—Å–ø–æ–º–∏–Ω–∞–Ω–∏—è –Ω–∞—á–∏–Ω–∞—é—Ç –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å—Å—è",
                    "failure_text": "–ì–æ–ª–æ–≤–∞ –±–æ–ª–∏—Ç, –Ω–∏—á–µ–≥–æ –Ω–µ –≤—Å–ø–æ–º–∏–Ω–∞–µ—Ç—Å—è"
                }
            ]
        },
        {
            "title": "–†–∞–∑–≥–æ–≤–æ—Ä —Å –î–∂–æ–π—Å",
            "posts": [
                {"speaker": "Joyce Messier", "text": "–û, –¥–µ—Ç–µ–∫—Ç–∏–≤! –ö–∞–∫ –¥–µ–ª–∞ —Å —Ä–∞—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ–º?", "order": 1},
                {"speaker": "Detective Harry", "text": "–î–∂–æ–π—Å... —Ç—ã –∑–Ω–∞–µ—à—å, —á—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç?", "order": 2},
                {"speaker": "Joyce Messier", "text": "–ö–æ–Ω–µ—á–Ω–æ! –í—Å–µ –≥–æ–≤–æ—Ä—è—Ç –æ–± —ç—Ç–æ–º –¥–µ–ª–µ. –≠—Ç–æ –∂–µ —Å–µ–Ω—Å–∞—Ü–∏—è!", "order": 3},
                {"speaker": "Detective Harry", "text": "–ê —á—Ç–æ –∏–º–µ–Ω–Ω–æ –≥–æ–≤–æ—Ä—è—Ç?", "order": 4},
            ],
            "skill_checks": [
                {
                    "skill": "rhetoric",
                    "difficulty": "easy",
                    "description": "–£–±–µ–¥–∏—Ç—å –î–∂–æ–π—Å —Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å –±–æ–ª—å—à–µ",
                    "success_text": "–î–∂–æ–π—Å —Å —Ä–∞–¥–æ—Å—Ç—å—é –¥–µ–ª–∏—Ç—Å—è —Å–ª—É—Ö–∞–º–∏",
                    "failure_text": "–î–∂–æ–π—Å –Ω–µ —Ö–æ—á–µ—Ç –≥–æ–≤–æ—Ä–∏—Ç—å –Ω–∞ —ç—Ç—É —Ç–µ–º—É"
                }
            ]
        }
    ]
    
    created_dialogues = []
    for dialogue_data in dialogues_data:
        dialogue = Dialogue.objects.create(
            title=dialogue_data["title"],
            project=project
        )
        dialogue.characters.add(*created_characters)
        
        # –°–æ–∑–¥–∞–µ–º –ø–æ—Å—Ç—ã –¥–∏–∞–ª–æ–≥–∞
        for post_data in dialogue_data["posts"]:
            Post.objects.create(
                dialogue=dialogue,
                speaker=post_data["speaker"],
                text=post_data["text"],
                order=post_data["order"]
            )
        
        # –°–æ–∑–¥–∞–µ–º skill checks
        for skill_data in dialogue_data["skill_checks"]:
            skill_check = SkillCheck.objects.create(
                dialogue=dialogue,
                skill=skill_data["skill"],
                difficulty=skill_data["difficulty"],
                description=skill_data["description"],
                success_text=skill_data["success_text"],
                failure_text=skill_data["failure_text"]
            )
            
            # –°–æ–∑–¥–∞–µ–º –æ–ø—Ü–∏–∏ –¥–∏–∞–ª–æ–≥–∞ –¥–ª—è skill checks
            DialogueOption.objects.create(
                dialogue=dialogue,
                text=f"–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å {skill_data['description'].lower()}",
                skill_check=skill_check,
                order=len(dialogue_data["skill_checks"])
            )
        
        created_dialogues.append(dialogue)
        print(f"  ‚úÖ –°–æ–∑–¥–∞–Ω –¥–∏–∞–ª–æ–≥: {dialogue.title}")
    
    # –°–æ–∑–¥–∞–µ–º –∫–≤–µ—Å—Ç—ã
    quests_data = [
        {
            "title": "–†–∞—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ —É–±–∏–π—Å—Ç–≤–∞",
            "description": "–ù–∞–π—Ç–∏ —É–±–∏–π—Ü—É –∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–ø—Ä–∞–≤–µ–¥–ª–∏–≤–æ—Å—Ç—å",
            "quest_type": "dialogue",
            "difficulty_level": 5,
            "dialogue": created_dialogues[0]
        },
        {
            "title": "–°–æ–±—Ä–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é",
            "description": "–£–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ –æ –∂–µ—Ä—Ç–≤–µ –∏ –ø–æ–¥–æ–∑—Ä–µ–≤–∞–µ–º—ã—Ö",
            "quest_type": "social",
            "difficulty_level": 3,
            "dialogue": created_dialogues[1]
        }
    ]
    
    created_quests = []
    for quest_data in quests_data:
        quest = Quest.objects.create(
            title=quest_data["title"],
            description=quest_data["description"],
            quest_type=quest_data["quest_type"],
            difficulty_level=quest_data["difficulty_level"],
            project=project,
            dialogue=quest_data["dialogue"],
            assigned_character=created_characters[0]
        )
        created_quests.append(quest)
        print(f"  ‚úÖ –°–æ–∑–¥–∞–Ω –∫–≤–µ—Å—Ç: {quest.title}")
    
    # –°–æ–∑–¥–∞–µ–º –ª–æ–≥–∏ –¥–∏–∞–ª–æ–≥–æ–≤
    logs_data = [
        {
            "quest": created_quests[0],
            "character": created_characters[0],
            "log_type": "dialogue",
            "author": "Detective Harry",
            "content": "–ù–∞—á–∞–ª —Ä–∞—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ —É–±–∏–π—Å—Ç–≤–∞",
            "result": "success"
        },
        {
            "quest": created_quests[0],
            "character": created_characters[1],
            "log_type": "dice_roll",
            "author": "Kim Kitsuragi",
            "content": "–ë—Ä–æ—Å–æ–∫ –Ω–∞ –ª–æ–≥–∏–∫—É: 15 + 9 = 24 (—É—Å–ø–µ—Ö)",
            "result": "success",
            "metadata": {"dice_roll": 15, "skill_value": 9, "total": 24}
        },
        {
            "quest": created_quests[1],
            "character": created_characters[2],
            "log_type": "dialogue",
            "author": "Joyce Messier",
            "content": "–ü–æ–¥–µ–ª–∏–ª–∞—Å—å —Å–ª—É—Ö–∞–º–∏ –æ –¥–µ–ª–µ",
            "result": "success"
        }
    ]
    
    for log_data in logs_data:
        DialogueLog.objects.create(**log_data)
    
    print(f"  ‚úÖ –°–æ–∑–¥–∞–Ω–æ {len(logs_data)} –∑–∞–ø–∏—Å–µ–π –≤ –ª–æ–≥–µ –¥–∏–∞–ª–æ–≥–æ–≤")
    
    # –°–æ–∑–¥–∞–µ–º —à–∞–±–ª–æ–Ω—ã —ç–∫—Å–ø–æ—Ä—Ç–∞
    export_templates = [
        {
            "name": "Unity Game Data",
            "description": "–®–∞–±–ª–æ–Ω –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞ –≤ Unity ScriptableObject",
            "format_type": "unity",
            "template_content": """using UnityEngine;

[CreateAssetMenu(fileName = "{{ project.name }}", menuName = "Game Data/{{ project.name }}")]
public class {{ project.name|replace(' ', '') }}Data : ScriptableObject
{
    [Header("Project Info")]
    public string projectName = "{{ project.name }}";
    public string description = "{{ project.description }}";
    
    [Header("Characters")]
    public CharacterData[] characters;
    
    [Header("Dialogues")]
    public DialogueData[] dialogues;
}""",
            "is_default": True
        },
        {
            "name": "Unreal Engine Data Table",
            "description": "–®–∞–±–ª–æ–Ω –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞ –≤ Unreal Engine",
            "format_type": "unreal",
            "template_content": """# Unreal Engine Data Table for {{ project.name }}

# Characters Data Table
--- Characters ---
CharacterID,CharacterName,Logic,Empathy,Authority,Endurance
{% for character in characters %}
{{ character.id }},{{ character.name }},{{ character.skills.logic }},{{ character.skills.empathy }},{{ character.skills.authority }},{{ character.skills.endurance }}
{% endfor %}""",
            "is_default": False
        }
    ]
    
    for template_data in export_templates:
        ExportTemplate.objects.create(**template_data)
        print(f"  ‚úÖ –°–æ–∑–¥–∞–Ω —à–∞–±–ª–æ–Ω —ç–∫—Å–ø–æ—Ä—Ç–∞: {template_data['name']}")
    
    print(f"\nüéâ –¢–µ—Å—Ç–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç '{project.name}' —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!")
    print(f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
    print(f"  - –ü–µ—Ä—Å–æ–Ω–∞–∂–∏: {len(created_characters)}")
    print(f"  - –î–∏–∞–ª–æ–≥–∏: {len(created_dialogues)}")
    print(f"  - –ö–≤–µ—Å—Ç—ã: {len(created_quests)}")
    print(f"  - –®–∞–±–ª–æ–Ω—ã —ç–∫—Å–ø–æ—Ä—Ç–∞: {len(export_templates)}")
    print(f"\nüîó ID –ø—Ä–æ–µ–∫—Ç–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {project.id}")
    
    return project


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Å–∏—Å—Ç–µ–º—ã —ç–∫—Å–ø–æ—Ä—Ç–∞ Torange Plaza")
    print("=" * 60)
    
    try:
        project = create_test_project()
        
        print("\n" + "=" * 60)
        print("‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω—ã!")
        print("\nüìù –î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —ç–∫—Å–ø–æ—Ä—Ç–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:")
        print(f"   - ID –ø—Ä–æ–µ–∫—Ç–∞: {project.id}")
        print("   - –§–æ—Ä–º–∞—Ç—ã: json, yaml, csv, unity, unreal")
        print("   - API endpoint: POST /api/export/project/")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö: {e}")
        return 1
    
    return 0


if __name__ == "__main__":
    exit(main())
