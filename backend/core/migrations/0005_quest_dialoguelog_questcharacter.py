# Generated by Django 5.2.6 on 2025-09-08 19:56

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0004_skillcheck_rollresult_dialogueoption'),
    ]

    operations = [
        migrations.CreateModel(
            name='Quest',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('quest_type', models.CharField(choices=[('dialogue', 'Диалог'), ('combat', 'Бой'), ('skill_check', 'Проверка навыка'), ('exploration', 'Исследование'), ('puzzle', 'Головоломка'), ('social', 'Социальное взаимодействие')], default='dialogue', max_length=20)),
                ('difficulty_level', models.IntegerField(default=1, help_text='Уровень сложности от 1 до 20')),
                ('status', models.CharField(choices=[('available', 'Доступен'), ('active', 'Активен'), ('completed', 'Завершен'), ('failed', 'Провален'), ('locked', 'Заблокирован')], default='available', max_length=20)),
                ('assigned_character', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_quests', to='core.character')),
                ('dialogue', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='quests', to='core.dialogue')),
                ('project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='quests', to='core.gameproject')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DialogueLog',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('log_type', models.CharField(choices=[('dialogue', 'Диалог'), ('dice_roll', 'Бросок кубика'), ('skill_check', 'Проверка навыка'), ('quest_action', 'Действие квеста'), ('character_action', 'Действие персонажа')], max_length=20)),
                ('author', models.CharField(help_text='NPC или Player', max_length=200)),
                ('content', models.TextField()),
                ('result', models.CharField(blank=True, help_text='успех/провал/нейтрально', max_length=50)),
                ('metadata', models.JSONField(blank=True, default=dict, help_text='Дополнительные данные (результат броска, модификаторы и т.д.)')),
                ('character', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='dialogue_logs', to='core.character')),
                ('quest', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='dialogue_logs', to='core.quest')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='QuestCharacter',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_primary', models.BooleanField(default=False, help_text='Основной персонаж квеста')),
                ('character', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='character_quests', to='core.character')),
                ('quest', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quest_characters', to='core.quest')),
            ],
            options={
                'unique_together': {('quest', 'character')},
            },
        ),
    ]
