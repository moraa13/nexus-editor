# Generated by Django 5.2.6 on 2025-09-12 14:55

import django.core.validators
import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0005_quest_dialoguelog_questcharacter'),
    ]

    operations = [
        migrations.CreateModel(
            name='ExportTemplate',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('format_type', models.CharField(choices=[('json', 'JSON'), ('yaml', 'YAML'), ('xml', 'XML'), ('csv', 'CSV'), ('unity', 'Unity ScriptableObject'), ('unreal', 'Unreal Engine Data Table'), ('godot', 'Godot Resource'), ('renpy', "Ren'Py Script"), ('twine', 'Twine Story Format')], max_length=20)),
                ('template_content', models.TextField(help_text='–®–∞–±–ª–æ–Ω –≤ —Ñ–æ—Ä–º–∞—Ç–µ Jinja2')),
                ('is_default', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='dialogueoption',
            name='color',
            field=models.CharField(default='#3B82F6', help_text='–¶–≤–µ—Ç –æ–ø—Ü–∏–∏ –≤ hex —Ñ–æ—Ä–º–∞—Ç–µ', max_length=7),
        ),
        migrations.AddField(
            model_name='dialogueoption',
            name='condition_met',
            field=models.BooleanField(default=True, help_text='–í—ã–ø–æ–ª–Ω–µ–Ω–æ –ª–∏ —É—Å–ª–æ–≤–∏–µ'),
        ),
        migrations.AddField(
            model_name='dialogueoption',
            name='condition_text',
            field=models.TextField(blank=True, help_text='–£—Å–ª–æ–≤–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –æ–ø—Ü–∏–∏'),
        ),
        migrations.AddField(
            model_name='dialogueoption',
            name='icon',
            field=models.CharField(default='üí¨', help_text='–ò–∫–æ–Ω–∫–∞ –æ–ø—Ü–∏–∏', max_length=50),
        ),
        migrations.AddField(
            model_name='dialogueoption',
            name='metadata',
            field=models.JSONField(blank=True, default=dict, help_text='–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ'),
        ),
        migrations.AddField(
            model_name='dialogueoption',
            name='next_dialogue',
            field=models.ForeignKey(blank=True, help_text='–°–ª–µ–¥—É—é—â–∏–π –¥–∏–∞–ª–æ–≥ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ —ç—Ç–æ–π –æ–ø—Ü–∏–∏', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='previous_options', to='core.dialogue'),
        ),
        migrations.AddField(
            model_name='dialogueoption',
            name='next_post',
            field=models.ForeignKey(blank=True, help_text='–°–ª–µ–¥—É—é—â–∏–π –ø–æ—Å—Ç –ø—Ä–∏ –≤—ã–±–æ—Ä–µ —ç—Ç–æ–π –æ–ø—Ü–∏–∏', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='previous_options', to='core.post'),
        ),
        migrations.AddField(
            model_name='dialogueoption',
            name='option_type',
            field=models.CharField(choices=[('response', '–û—Ç–≤–µ—Ç –∏–≥—Ä–æ–∫–∞'), ('choice', '–í—ã–±–æ—Ä –¥–µ–π—Å—Ç–≤–∏—è'), ('skill_check', '–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–≤—ã–∫–∞'), ('condition', '–£—Å–ª–æ–≤–Ω—ã–π –ø–µ—Ä–µ—Ö–æ–¥')], default='response', max_length=20),
        ),
        migrations.AddField(
            model_name='dialogueoption',
            name='required_skill',
            field=models.CharField(blank=True, help_text='–¢—Ä–µ–±—É–µ–º—ã–π –Ω–∞–≤—ã–∫', max_length=30),
        ),
        migrations.AddField(
            model_name='dialogueoption',
            name='required_skill_value',
            field=models.IntegerField(blank=True, help_text='–ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –Ω–∞–≤—ã–∫–∞', null=True),
        ),
        migrations.AddField(
            model_name='post',
            name='color',
            field=models.CharField(default='#6B7280', help_text='–¶–≤–µ—Ç –ø–æ—Å—Ç–∞', max_length=7),
        ),
        migrations.AddField(
            model_name='post',
            name='has_options',
            field=models.BooleanField(default=False, help_text='–ï—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ—Å—Ç–∞ –æ–ø—Ü–∏–∏ –æ—Ç–≤–µ—Ç–∞'),
        ),
        migrations.AddField(
            model_name='post',
            name='icon',
            field=models.CharField(default='üí¨', help_text='–ò–∫–æ–Ω–∫–∞ –ø–æ—Å—Ç–∞', max_length=50),
        ),
        migrations.AddField(
            model_name='post',
            name='is_branching_point',
            field=models.BooleanField(default=False, help_text='–Ø–≤–ª—è–µ—Ç—Å—è –ª–∏ —Ç–æ—á–∫–æ–π –≤–µ—Ç–≤–ª–µ–Ω–∏—è'),
        ),
        migrations.AddField(
            model_name='post',
            name='post_type',
            field=models.CharField(choices=[('statement', '–£—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ'), ('question', '–í–æ–ø—Ä–æ—Å'), ('action', '–î–µ–π—Å—Ç–≤–∏–µ'), ('narration', '–ü–æ–≤–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ')], default='statement', max_length=20),
        ),
        migrations.AlterField(
            model_name='character',
            name='authority',
            field=models.IntegerField(default=2, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(20)]),
        ),
        migrations.AlterField(
            model_name='character',
            name='composure',
            field=models.IntegerField(default=2, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(20)]),
        ),
        migrations.AlterField(
            model_name='character',
            name='conceptualization',
            field=models.IntegerField(default=2, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(20)]),
        ),
        migrations.AlterField(
            model_name='character',
            name='drama',
            field=models.IntegerField(default=2, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(20)]),
        ),
        migrations.AlterField(
            model_name='character',
            name='electrochemistry',
            field=models.IntegerField(default=2, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(20)]),
        ),
        migrations.AlterField(
            model_name='character',
            name='empathy',
            field=models.IntegerField(default=2, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(20)]),
        ),
        migrations.AlterField(
            model_name='character',
            name='encyclopedia',
            field=models.IntegerField(default=2, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(20)]),
        ),
        migrations.AlterField(
            model_name='character',
            name='endurance',
            field=models.IntegerField(default=2, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(20)]),
        ),
        migrations.AlterField(
            model_name='character',
            name='espirit_de_corps',
            field=models.IntegerField(default=2, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(20)]),
        ),
        migrations.AlterField(
            model_name='character',
            name='half_light',
            field=models.IntegerField(default=2, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(20)]),
        ),
        migrations.AlterField(
            model_name='character',
            name='hand_eye_coordination',
            field=models.IntegerField(default=2, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(20)]),
        ),
        migrations.AlterField(
            model_name='character',
            name='inland_empire',
            field=models.IntegerField(default=2, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(20)]),
        ),
        migrations.AlterField(
            model_name='character',
            name='interfacing',
            field=models.IntegerField(default=2, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(20)]),
        ),
        migrations.AlterField(
            model_name='character',
            name='logic',
            field=models.IntegerField(default=2, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(20)]),
        ),
        migrations.AlterField(
            model_name='character',
            name='pain_threshold',
            field=models.IntegerField(default=2, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(20)]),
        ),
        migrations.AlterField(
            model_name='character',
            name='perception',
            field=models.IntegerField(default=2, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(20)]),
        ),
        migrations.AlterField(
            model_name='character',
            name='physical_instrument',
            field=models.IntegerField(default=2, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(20)]),
        ),
        migrations.AlterField(
            model_name='character',
            name='reaction_speed',
            field=models.IntegerField(default=2, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(20)]),
        ),
        migrations.AlterField(
            model_name='character',
            name='rhetoric',
            field=models.IntegerField(default=2, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(20)]),
        ),
        migrations.AlterField(
            model_name='character',
            name='savoir_faire',
            field=models.IntegerField(default=2, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(20)]),
        ),
        migrations.AlterField(
            model_name='character',
            name='shivers',
            field=models.IntegerField(default=2, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(20)]),
        ),
        migrations.AlterField(
            model_name='character',
            name='suggestion',
            field=models.IntegerField(default=2, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(20)]),
        ),
        migrations.AlterField(
            model_name='character',
            name='visual_calculus',
            field=models.IntegerField(default=2, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(20)]),
        ),
        migrations.AlterField(
            model_name='character',
            name='volition',
            field=models.IntegerField(default=2, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(20)]),
        ),
        migrations.AlterField(
            model_name='dialogueoption',
            name='is_available',
            field=models.BooleanField(default=True, help_text='–î–æ—Å—Ç—É–ø–Ω–∞ –ª–∏ –æ–ø—Ü–∏—è'),
        ),
        migrations.AlterField(
            model_name='dialogueoption',
            name='order',
            field=models.IntegerField(default=0, help_text='–ü–æ—Ä—è–¥–æ–∫ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è'),
        ),
        migrations.AlterField(
            model_name='dialogueoption',
            name='text',
            field=models.TextField(help_text='–¢–µ–∫—Å—Ç –æ–ø—Ü–∏–∏'),
        ),
        migrations.AlterField(
            model_name='quest',
            name='difficulty_level',
            field=models.IntegerField(default=1, help_text='–£—Ä–æ–≤–µ–Ω—å —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –æ—Ç 1 –¥–æ 20', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(20)]),
        ),
        migrations.AlterUniqueTogether(
            name='dialogueoption',
            unique_together={('dialogue', 'order')},
        ),
        migrations.CreateModel(
            name='ExportSession',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('format_type', models.CharField(choices=[('json', 'JSON'), ('yaml', 'YAML'), ('xml', 'XML'), ('csv', 'CSV'), ('unity', 'Unity ScriptableObject'), ('unreal', 'Unreal Engine Data Table'), ('godot', 'Godot Resource'), ('renpy', "Ren'Py Script"), ('twine', 'Twine Story Format')], default='json', max_length=20)),
                ('status', models.CharField(choices=[('pending', '–û–∂–∏–¥–∞–µ—Ç'), ('processing', '–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è'), ('completed', '–ó–∞–≤–µ—Ä—à–µ–Ω'), ('failed', '–û—à–∏–±–∫–∞')], default='pending', max_length=20)),
                ('file_path', models.CharField(blank=True, max_length=500)),
                ('file_size', models.BigIntegerField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True)),
                ('export_options', models.JSONField(blank=True, default=dict)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='export_sessions', to='core.gameproject')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
