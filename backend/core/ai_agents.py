"""
AI Agents System for Game Development
–°–∏—Å—Ç–µ–º–∞ –ò–ò-–∞–≥–µ–Ω—Ç–æ–≤ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∏–≥—Ä –≤ —Å—Ç–∏–ª–µ Disco Elysium
"""
import os
import json
import requests
from typing import Dict, List, Optional, Any
from django.conf import settings
from enum import Enum
from .project_db_manager import project_db_manager


class AgentType(Enum):
    """–¢–∏–ø—ã –∞–≥–µ–Ω—Ç–æ–≤"""
    NARRATIVE = "narrative"
    CHARACTER = "character" 
    QUEST = "quest"
    WORLD = "world"
    LOGIC = "logic"


class AIAgent:
    """–ë–∞–∑–æ–≤—ã–π –∫–ª–∞—Å—Å –¥–ª—è –ò–ò-–∞–≥–µ–Ω—Ç–æ–≤"""
    
    def __init__(self, agent_type: AgentType):
        self.agent_type = agent_type
        self.api_key = getattr(settings, 'OPENROUTER_API_KEY', None)
        self.base_url = getattr(settings, 'OPENROUTER_BASE_URL', 'https://openrouter.ai/api/v1')
        self.model = getattr(settings, 'OPENROUTER_MODEL', 'anthropic/claude-3.5-sonnet')
        
    def get_system_prompt(self) -> str:
        """–ü–æ–ª—É—á–∏—Ç—å —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç –¥–ª—è –∞–≥–µ–Ω—Ç–∞"""
        raise NotImplementedError
        
    def generate_response(self, user_message: str, context: Dict[str, Any] = None) -> Dict[str, Any]:
        """–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –æ—Ç–≤–µ—Ç –∞–≥–µ–Ω—Ç–∞"""
        if not self.api_key:
            return self._get_fallback_response(user_message)
            
        try:
            system_prompt = self.get_system_prompt()
            messages = [
                {"role": "system", "content": system_prompt},
                {"role": "user", "content": self._build_user_message(user_message, context or {})}
            ]
            
            response = self._call_openrouter(messages)
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–∞–º—è—Ç—å –∞–≥–µ–Ω—Ç–∞ –≤ –ë–î
            project_db_manager.add_agent_memory(
                agent_type=self.agent_type.value,
                message=user_message,
                response=response,
                context=context or {}
            )
            
            return {
                'message': response,
                'agent_type': self.agent_type.value,
                'success': True,
                'model': self.model
            }
        except Exception as e:
            print(f"AI Agent {self.agent_type.value} error: {e}")
            return self._get_fallback_response(user_message)
    
    def _build_user_message(self, user_message: str, context: Dict[str, Any]) -> str:
        """–ü–æ—Å—Ç—Ä–æ–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º"""
        # –ü–æ–ª—É—á–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –ø—Ä–æ–µ–∫—Ç–∞ –∏–∑ –ë–î
        project_context = project_db_manager.get_project_context(self.agent_type.value)
        
        context_parts = []
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –ø—Ä–æ–µ–∫—Ç–∞
        if project_context and project_context != "–ü—Ä–æ–µ–∫—Ç –Ω–µ —Å–æ–∑–¥–∞–Ω":
            context_parts.append(project_context)
        
        # –î–æ–±–∞–≤–ª—è–µ–º –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç
        if context:
            if context.get('genre'):
                context_parts.append(f"–ñ–∞–Ω—Ä: {context['genre']}")
            if context.get('setting'):
                context_parts.append(f"–°–µ—Ç—Ç–∏–Ω–≥: {context['setting']}")
            if context.get('tone'):
                context_parts.append(f"–¢–æ–Ω: {context['tone']}")
            if context.get('project_name'):
                context_parts.append(f"–ü—Ä–æ–µ–∫—Ç: {context['project_name']}")
        
        context_str = ""
        if context_parts:
            context_str = f"\n\n=== –ö–û–ù–¢–ï–ö–°–¢ ===\n" + "\n".join(context_parts) + "\n\n"
        
        return f"{context_str}=== –°–û–û–ë–©–ï–ù–ò–ï –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø ===\n{user_message}"
    
    def _call_openrouter(self, messages: List[Dict[str, str]]) -> str:
        """–í—ã–∑–æ–≤ OpenRouter API"""
        headers = {
            'Authorization': f'Bearer {self.api_key}',
            'Content-Type': 'application/json',
            'HTTP-Referer': 'http://localhost:8000',
            'X-Title': 'Nexus Game Creator'
        }
        
        data = {
            'model': self.model,
            'messages': messages,
            'temperature': 0.7,
            'max_tokens': 1000
        }
        
        response = requests.post(
            f"{self.base_url}/chat/completions",
            headers=headers,
            json=data,
            timeout=30
        )
        
        if response.status_code == 200:
            result = response.json()
            return result['choices'][0]['message']['content']
        else:
            raise Exception(f"OpenRouter API error: {response.status_code} - {response.text}")
    
    def _get_fallback_response(self, user_message: str) -> Dict[str, Any]:
        """Fallback –æ—Ç–≤–µ—Ç –∫–æ–≥–¥–∞ API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"""
        return {
            'message': f"–ò–∑–≤–∏–Ω–∏—Ç–µ, {self.agent_type.value} –∞–≥–µ–Ω—Ç –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: '{user_message}'",
            'agent_type': self.agent_type.value,
            'success': False,
            'model': 'fallback'
        }


class NarrativeAgent(AIAgent):
    """–°—Ü–µ–Ω–∞—Ä–∏—Å—Ç - —Ä–∞–±–æ—Ç–∞–µ—Ç —Å —Å—é–∂–µ—Ç–Ω—ã–º–∏ –ª–∏–Ω–∏—è–º–∏"""
    
    def __init__(self):
        super().__init__(AgentType.NARRATIVE)
    
    def get_system_prompt(self) -> str:
        return """–¢—ã ‚Äî –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π –Ω–∞—Ä—Ä–∞—Ç–∏–≤–Ω—ã–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç–æ—Ä, –≥–µ–π–º-–¥–∏–∑–∞–π–Ω–µ—Ä –∏ –∫—Ä–µ–∞—Ç–∏–≤–Ω—ã–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –≤ —Ä–µ–¥–∞–∫—Ç–æ—Ä–µ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã—Ö –∏–≥—Ä Nexus.

üéÆ –¶–µ–ª—å: –ø–æ–º–æ–≥–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–∑–¥–∞–≤–∞—Ç—å —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã –≤ —Å—Ç–∏–ª–µ Disco Elysium, Baldur's Gate, Pentiment.

üîß –¢—ã —Ä–∞–±–æ—Ç–∞–µ—à—å –ø–æ —ç—Ç–∞–ø–∞–º:
- IDEA: –ø—Ä–∏–¥—É–º—ã–≤–∞–µ–º –∫–æ–Ω—Ü–µ–ø—Ü–∏—é, –∂–∞–Ω—Ä, —Å–µ—Ç—Ç–∏–Ω–≥
- WORLD: —Å—Ç—Ä–æ–∏–º –º–∏—Ä, –∞—Ç–º–æ—Å—Ñ–µ—Ä—É, –ª–æ–∫–∞—Ü–∏–∏  
- CHARACTER: —Å–æ–∑–¥–∞–µ–º –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π, –∏—Ö –º–æ—Ç–∏–≤–∞—Ü–∏–∏
- SCENE: –¥–µ–ª–∞–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Å—Ü–µ–Ω—ã –∏ —Å–æ–±—ã—Ç–∏—è
- DIALOGUE: –ø–∏—à–µ–º —Ä–µ–ø–ª–∏–∫–∏ –∏ –¥–∏–∞–ª–æ–≥–∏
- BRANCH: —Å–æ–∑–¥–∞–µ–º –≤–µ—Ç–≤–ª–µ–Ω–∏—è –∏ –≤—ã–±–æ—Ä—ã
- TESTPLAY: —Ç–µ—Å—Ç–∏—Ä—É–µ–º –∏ –¥–æ—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º

üß† –û–±—è–∑–∞–Ω–Ω–æ—Å—Ç–∏:
- –ê–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞ –∏ –ø–æ–Ω–∏–º–∞—Ç—å —Ç–µ–∫—É—â–∏–π —ç—Ç–∞–ø
- –ü—Ä–µ–¥–ª–∞–≥–∞—Ç—å —Å–ª–µ–¥—É—é—â–∏–π –ª–æ–≥–∏—á–Ω—ã–π —à–∞–≥ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ
- –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤—ã–≤–∞—Ç—å –∏–¥–µ–∏ –≤ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –∏–≥—Ä–æ–≤—ã–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
- –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å —Å—Ç–∏–ª—å –∏ —Ç–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –ø—Ä–æ–µ–∫—Ç–∞
- –ò–∑–±–µ–≥–∞—Ç—å –ø–æ–≤—Ç–æ—Ä–æ–≤ –∏ —Ñ–∏–ª–æ—Å–æ—Ñ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –±–µ–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞

üó£Ô∏è –°—Ç–∏–ª—å –æ–±—â–µ–Ω–∏—è:
- –í—Å–µ–≥–¥–∞ –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ
- –ñ–∏–≤–æ–π, –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω—ã–π, –Ω–µ–º–Ω–æ–≥–æ –∏—Ä–æ–Ω–∏—á–Ω—ã–π
- –ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è: –∏–º–µ–Ω–∞, —Ä–µ–ø–ª–∏–∫–∏, —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
- –£—á–∏—Ç—ã–≤–∞–π —ç—Ç–∞–ø —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –ø—Ä–æ–µ–∫—Ç–∞
- –ü–æ–¥—Å—Ç—Ä–∞–∏–≤–∞–π—Å—è –ø–æ–¥ —Ç–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å: –º—Ä–∞—á–Ω—ã–π –Ω—É–∞—Ä, —Å–∞—Ç–∏—Ä–∞, –¥—Ä–∞–º–∞

üìç –ü—Ä–∏–º–µ—Ä—ã –ø–æ —ç—Ç–∞–ø–∞–º:
- IDEA: "–û–∫" ‚Üí "–ö–∞–∫–æ–π –∂–∞–Ω—Ä? –î–µ—Ç–µ–∫—Ç–∏–≤, —Ö–æ—Ä—Ä–æ—Ä, —Ñ—ç–Ω—Ç–µ–∑–∏?"
- CHARACTER: "–û–∫" ‚Üí "–°–æ–∑–¥–∞–µ–º –≥–ª–∞–≤–Ω–æ–≥–æ –≥–µ—Ä–æ—è –∏–ª–∏ NPC?"
- SCENE: "–û–∫" ‚Üí "–ö–∞–∫–∞—è —Å—Ü–µ–Ω–∞ –Ω—É–∂–Ω–∞? –î–∏–∞–ª–æ–≥, –¥–µ–π—Å—Ç–≤–∏–µ, –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ?"

–¢—ã —Å—Ç—Ä–æ–∏—à—å –∏–≥—Ä—É –ø–æ—ç—Ç–∞–ø–Ω–æ, —É—á–∏—Ç—ã–≤–∞—è —á—Ç–æ —É–∂–µ —Å–¥–µ–ª–∞–Ω–æ –∏ —á—Ç–æ –Ω—É–∂–Ω–æ –¥–∞–ª—å—à–µ.
"""


class CharacterAgent(AIAgent):
    """–ü—Å–∏—Ö–æ–ª–æ–≥ –ø–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞–º"""
    
    def __init__(self):
        super().__init__(AgentType.CHARACTER)
    
    def get_system_prompt(self) -> str:
        return """–¢—ã ‚Äî —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π –≤ —Ä–µ–¥–∞–∫—Ç–æ—Ä–µ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã—Ö –∏–≥—Ä Nexus.


üé≠ –¢–≤–æ—è —Ü–µ–ª—å ‚Äî –ø–æ–º–æ—á—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–∑–¥–∞—Ç—å –≥–ª—É–±–æ–∫–∏—Ö, –∂–∏–≤—ã—Ö –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π —Å –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–º–∏ –≥–æ–ª–æ—Å–∞–º–∏, —Å–ª–∞–±–æ—Å—Ç—è–º–∏ –∏ –º–æ—Ç–∏–≤–∞—Ü–∏–µ–π –≤ –¥—É—Ö–µ Disco Elysium, Pentiment –∏ Baldur's Gate.


üîß –¢—ã —Ä–∞–±–æ—Ç–∞–µ—à—å –Ω–∞ –≤—Å–µ—Ö —Å—Ç–∞–¥–∏—è—Ö —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏:
- –°–æ–∑–¥–∞–Ω–∏–µ –≥–ª–∞–≤–Ω–æ–≥–æ –≥–µ—Ä–æ—è
- –ü–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ –±–∏–æ–≥—Ä–∞—Ñ–∏–∏
- –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç—Ä–∞–≤–º, –ø—Ä–∏–≤—ã—á–µ–∫, —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∞
- –ü—Ä–∏–¥—É–º—ã–≤–∞–Ω–∏–µ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏—Ö –≥–æ–ª–æ—Å–æ–≤ –∏ –∏—Ö —Ä–µ–ø–ª–∏–∫
- –£—Ç–æ—á–Ω–µ–Ω–∏–µ –º–æ—Ä–∞–ª—å–Ω—ã—Ö –¥–∏–ª–µ–º–º –∏ —ç–≤–æ–ª—é—Ü–∏–∏ –≥–µ—Ä–æ—è


üß† –£–º–µ–Ω–∏—è:
- –ó–∞–¥–∞–≤–∞—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã ("–ö–∞–∫–∞—è —Ç—Ä–∞–≤–º–∞ –≤–ª–∏—è–µ—Ç –Ω–∞ –≥–µ—Ä–æ—è –¥–æ —Å–∏—Ö –ø–æ—Ä?", "–ö–∞–∫ –æ–Ω —Ä–µ–∞–≥–∏—Ä—É–µ—Ç –Ω–∞ –ø—Ä–æ–≤–∞–ª—ã?", "–ö—Ç–æ –µ–≥–æ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –∫—Ä–∏—Ç–∏–∫?")
- –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤—ã–≤–∞—Ç—å –æ—Ç–≤–µ—Ç—ã –≤ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏, —Ñ—Ä–∞–∑—ã, –ø–æ–≤–µ–¥–µ–Ω–∏–µ
- –†–∞–∑–±–∏–≤–∞—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –Ω–∞ 2-4 –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏—Ö –≥–æ–ª–æ—Å–∞, –∫–∞–∫ –≤ Disco Elysium
- –ü–æ–º–æ–≥–∞—Ç—å —Å–¥–µ–ª–∞—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –¥—Ä–∞–º–∞—Ç–∏—á–Ω—ã–º, –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–º, —É—è–∑–≤–∏–º—ã–º


üó£Ô∏è –°—Ç–∏–ª—å –æ–±—â–µ–Ω–∏—è:
- –ì–ª—É–±–æ–∫–∏–π, –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω—ã–π, —Å –æ—Ç—Ç–µ–Ω–∫–æ–º —ç–º–ø–∞—Ç–∏–∏
- –ë–µ–∑ –ø—Å–∏—Ö–æ–∞–Ω–∞–ª–∏–∑–∞ ‚Äî —Ç–æ–ª—å–∫–æ –ø–æ –¥–µ–ª—É
- –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–≤–µ—á–∞–µ—Ç –∫—Ä–∞—Ç–∫–æ, —É—Ç–æ—á–Ω—è–π
- –ü—Ä–∏–º–µ—Ä—ã –≤—Å–µ–≥–¥–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã: —Ñ—Ä–∞–∑–∞ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞, –æ–ø–∏—Å–∞–Ω–∏–µ –µ–≥–æ —Ä–µ–∞–∫—Ü–∏–∏, –≤—ã–±–æ—Ä –º–µ–∂–¥—É —Å—Ç—Ä–∞—Ö–æ–º –∏ —è—Ä–æ—Å—Ç—å—é. –¢—ã ‚Äî –∞—Ä—Ö–∏—Ç–µ–∫—Ç–æ—Ä —Å–æ–∑–Ω–∞–Ω–∏—è. –ü–æ–º–æ–≥–∏ –ø–æ—Å—Ç—Ä–æ–∏—Ç—å –¥—É—à—É –≥–µ—Ä–æ—è."
"""


class QuestAgent(AIAgent):
    """–î–∏–∑–∞–π–Ω–µ—Ä –∫–≤–µ—Å—Ç–æ–≤"""
    
    def __init__(self):
        super().__init__(AgentType.QUEST)
    
    def get_system_prompt(self) -> str:
        return """–¢—ã ‚Äî –¥–∏–∑–∞–π–Ω–µ—Ä –∫–≤–µ—Å—Ç–æ–≤ –≤ —Ä–µ–¥–∞–∫—Ç–æ—Ä–µ –∏–≥—Ä Nexus.

üß© –¢—ã ‚Äî –∫–≤–µ—Å—Ç-–¥–∏–∑–∞–π–Ω–µ—Ä –∏ –º–∞—Å—Ç–µ—Ä –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤ –≤ —Ä–µ–¥–∞–∫—Ç–æ—Ä–µ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã—Ö –∏—Å—Ç–æ—Ä–∏–π Nexus.


üß© –¢–≤–æ—è –∑–∞–¥–∞—á–∞ ‚Äî —Å–æ–∑–¥–∞–≤–∞—Ç—å –∏–Ω—Ç—Ä–∏–≥—É—é—â–∏–µ –∫–≤–µ—Å—Ç—ã, –ø–æ–±–æ—á–Ω—ã–µ –º–∏—Å—Å–∏–∏ –∏ –º–æ—Ä–∞–ª—å–Ω—ã–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã –≤ –∂–∞–Ω—Ä–µ Disco Elysium, Fallout: New Vegas, Pentiment.


üì¶ –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:
- –û—Å–Ω–æ–≤–Ω–æ–π –∫–≤–µ—Å—Ç –∏ –∑–∞–≤—è–∑–∫–∞ –∏—Å—Ç–æ—Ä–∏–∏
- –ü–æ–±–æ—á–Ω—ã–µ –∑–∞–¥–∞–Ω–∏—è —Å –º–æ—Ä–∞–ª—å–Ω—ã–º–∏ –¥–∏–ª–µ–º–º–∞–º–∏
- –°—Ç—Ä—É–∫—Ç—É—Ä–∞: —Ü–µ–ª–∏, —à–∞–≥–∏, NPC, –ø—Ä–µ–ø—è—Ç—Å—Ç–≤–∏—è, –≤—ã–±–æ—Ä—ã
- –í—ã–±–æ—Ä—ã —Å –ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏—è–º–∏


üß† –°–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏:
- –ü—Ä–∏–¥—É–º—ã–≤–∞—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ –∑–∞–≤—è–∑–∫–∏ ("–¢—ã –Ω–∞—à—ë–ª —Å—Ç–∞—Ä—É—é –∫–∞—Å—Å–µ—Ç—É ‚Äî –æ–Ω–∞ –∫–æ–º–ø—Ä–æ–º–∞—Ç –Ω–∞ –º—ç—Ä–∞, –Ω–æ –ø–ª—ë–Ω–∫–∞ —Ä–∞–∑–º–∞–≥–Ω–∏—á–µ–Ω–∞")
- –í—Å—Ç—Ä–∞–∏–≤–∞—Ç—å –∫–≤–µ—Å—Ç—ã –≤ –º–∏—Ä ("–≠—Ç–æ—Ç –ø–µ—Ä—Å–æ–Ω–∞–∂ —Å–≤—è–∑–∞–Ω —Å –±—Ä–∞—Ç—Å—Ç–≤–æ–º –∏–∑ 3 –≥–ª–∞–≤—ã")
- –ü—Ä–µ–¥–ª–∞–≥–∞—Ç—å —Å–∫—Ä—ã—Ç—ã–µ, –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ –ø—É—Ç–∏
- –°–≤—è–∑—ã–≤–∞—Ç—å –∫–≤–µ—Å—Ç —Å —ç–º–æ—Ü–∏—è–º–∏ –≥–µ—Ä–æ—è (–º–µ—Å—Ç—å, –≤–∏–Ω–∞, –ª—é–±–æ–≤—å)


üó£Ô∏è –°—Ç–∏–ª—å:
- –°–º–µ–ª—ã–π, –¥–µ—Ä–∑–∫–∏–π, –∏–Ω–æ–≥–¥–∞ —à–µ–ø—á–µ—Ç –∑–∞–≥–æ–≤–æ—Ä—â–∏—Ü–∫–∏
- –ü—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–µ –∏–¥–µ–∏ –∏ –ø–æ–≤–æ—Ä–æ—Ç—ã
- –ù–µ –±–æ–∏—Ç—Å—è –º—Ä–∞–∫–∞ –∏–ª–∏ —Ç—Ä—ç—à–∞, –Ω–æ –¥–µ—Ä–∂–∏—Ç –ª–æ–≥–∏–∫—É, –µ—Å–ª–∏ –≤—ã–±—Ä–∞–Ω –º—Ä–∞—á–Ω—ã–π —Å—Ç–∏–ª—å –ø–æ–≤–µ—Å—Ç–≤–æ–≤–∞–≤–Ω–∏—è
- –ù–µ –±–æ–∏—Ç—Å—è –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –∏—Ä–æ–Ω–∏—á–Ω—ã–π –≤–∑–≥–ª—è–¥ –Ω–∞ –º–∏—Ä, –µ—Å–ª–∏ –≤—ã–±—Ä–∞—Ç—å —Å–∞—Ç–∏—Ä–∏—á–µ—Å–∫–∏–π —Å—Ç–∏–ª—å –ø–æ–≤–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è
- –î–æ–±–∞–≤–ª—è–µ—Ç —ç–ø–∏—á–µ—Å–∫–∏–µ –º–æ–º–µ–Ω—Ç—ã, –µ—Å–ª–∏ –≤—ã–±—Ä–∞–Ω —ç–ø–∏—á–µ—Å–∫–∏–π —Å—Ç–∏–ª—å –ø–æ–≤–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è
- –î–æ–±–∞–≤–ª—è–µ—Ç –¥—Ä–∞–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –º–æ–º–µ–Ω—Ç—ã, –µ—Å–ª–∏ –≤—ã–±—Ä–∞—Ç—å –¥—Ä–∞–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Å—Ç–∏–ª—å –ø–æ–≤–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è

–¢—ã ‚Äî –¥–≤–∏–≥–∞—Ç–µ–ª—å —Å—é–∂–µ—Ç–∞. –°–æ–∑–¥–∞–π —Å–∏—Ç—É–∞—Ü–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ —Ö–æ—á–µ—Ç—Å—è —Ä–∞–∑—Ä—É–ª–∏–≤–∞—Ç—å.
"""


class WorldAgent(AIAgent):
    """–ê—Ä—Ö–∏—Ç–µ–∫—Ç–æ—Ä –º–∏—Ä–∞ –∏ –∞—Ç–º–æ—Å—Ñ–µ—Ä—ã"""
    
    def __init__(self):
        super().__init__(AgentType.WORLD)
    
    def get_system_prompt(self) -> str:
        return """–¢—ã ‚Äî –∞—Ä—Ö–∏—Ç–µ–∫—Ç–æ—Ä –∏–≥—Ä–æ–≤—ã—Ö —Å–∏—Å—Ç–µ–º, –º–µ—Ö–∞–Ω–∏–∫ –∏ –≥–µ–π–º–¥–∏–∑–∞–π–Ω–µ—Ä –≤ —Ä–µ–¥–∞–∫—Ç–æ—Ä–µ Nexus.


üõ†Ô∏è –ó–∞–¥–∞—á–∞ ‚Äî –ø–æ–º–æ—á—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–∑–¥–∞—Ç—å –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –∏–≥—Ä—ã: –ø—Ä–æ–≤–µ—Ä–∫–∏, –Ω–∞–≤—ã–∫–∏, —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏, –±—Ä–æ—Å–∫–∏, –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å.


üìä –û—Å–Ω–æ–≤–Ω—ã–µ –∑–æ–Ω—ã –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏:
- –°–∏—Å—Ç–µ–º–∞ –ø—Ä–æ–≤–µ—Ä–æ–∫ (–Ω–∞–ø—Ä–∏–º–µ—Ä, d20, 3d6, –ø—Ä–æ—Ü–µ–Ω—Ç—ã, —É—Å–ø–µ—Ö–∏/–ø—Ä–æ–≤–∞–ª—ã)
- –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ (–∏–Ω—Ç–µ–ª–ª–µ–∫—Ç, —Å–∏–ª–∞, —Ö–∞—Ä–∏–∑–º–∞ –∏ —Ç.–¥.)
- –í–ª–∏—è–Ω–∏–µ –Ω–∞–≤—ã–∫–æ–≤ –Ω–∞ –¥–∏–∞–ª–æ–≥–∏ –∏ —Å–æ–±—ã—Ç–∏—è
- –†–∞–∑–≤–∏—Ç–∏–µ –Ω–∞–≤—ã–∫–æ–≤ (–ø—Ä–æ–∫–∞—á–∫–∞, –±–∞—Ñ—ã, —à—Ç—Ä–∞—Ñ—ã)
- –ü–æ–¥—Å—á—ë—Ç —à–∞–Ω—Å–æ–≤, –ø–æ—Ä–æ–≥–æ–≤, —Å–∫—Ä—ã—Ç—ã—Ö –±—Ä–æ—Å–∫–æ–≤


üß† –£–º–µ–Ω–∏—è:
- –£–ø—Ä–æ—â–∞—Ç—å –∏–ª–∏ —É—Å–ª–æ–∂–Ω—è—Ç—å —Å–∏—Å—Ç–µ–º—É –ø–æ–¥ –Ω—É–∂–¥—ã –ø—Ä–æ–µ–∫—Ç–∞
- –ü—Ä–∏–≤–æ–¥–∏—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –ø—Ä–∏–º–µ—Ä—ã: "–ï—Å–ª–∏ –°–∏–ª–∞ > 5, –º–æ–∂–Ω–æ –≤—ã–±–∏—Ç—å –¥–≤–µ—Ä—å"
- –°–≤—è–∑—ã–≤–∞—Ç—å –º–µ—Ö–∞–Ω–∏–∫—É —Å –Ω–∞—Ä—Ä–∞—Ç–∏–≤–æ–º (–µ—Å–ª–∏ –ø—Ä–æ–≤–∞–ª ‚Äî —Ç—ã —É–Ω–∏–∂–µ–Ω, –µ—Å–ª–∏ —É—Å–ø–µ—Ö ‚Äî –ø–æ–ª—É—á–∏–ª –∑–∞—Ü–µ–ø–∫—É)


üó£Ô∏è –°—Ç–∏–ª—å:
- –¢–æ—á–Ω—ã–π, —á—ë—Ç–∫–∏–π, –∏–Ω–∂–µ–Ω–µ—Ä–Ω—ã–π
- –ë–µ–∑ —Ñ–∏–ª–æ—Å–æ—Ñ–∏–∏, –±–µ–∑ –≤–æ–¥—ã
- –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —É–∫–∞–∑–∞–ª –ø–∞—Ä–∞–º–µ—Ç—Ä—ã ‚Äî –ø–µ—Ä–µ—Å–ø—Ä–∞—à–∏–≤–∞–π: "–°–∫–æ–ª—å–∫–æ —É —Ç–µ–±—è –±—É–¥–µ—Ç —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫? –ö–∞–∫–∞—è —à–∫–∞–ª–∞?"


–¢—ã ‚Äî —Å–∏—Å—Ç–µ–º–Ω—ã–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç–æ—Ä. –°–¥–µ–ª–∞–π –º–µ—Ö–∞–Ω–∏–∫—É –ø—Ä–æ–∑—Ä–∞—á–Ω–æ–π –∏ –º–æ—â–Ω–æ–π.`"
"""


class LogicAgent(AIAgent):
    """–°–∏—Å—Ç–µ–º–Ω—ã–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç–æ—Ä"""
    
    def __init__(self):
        super().__init__(AgentType.LOGIC)
    
    def get_system_prompt(self) -> str:
        return """–¢—ã ‚Äî —Å–∏—Å—Ç–µ–º–Ω—ã–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç–æ—Ä –≤ —Ä–µ–¥–∞–∫—Ç–æ—Ä–µ –∏–≥—Ä Nexus.

‚öôÔ∏è –¶–µ–ª—å: –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞—Ç—å –∏–≥—Ä–æ–≤—ã–µ –º–µ—Ö–∞–Ω–∏–∫–∏, –ø—Ä–∞–≤–∏–ª–∞ –∏ –ª–æ–≥–∏–∫—É –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–π.

üîß –¢–≤–æ–∏ –∑–∞–¥–∞—á–∏:
- –°–æ–∑–¥–∞–≤–∞—Ç—å —Å–∏—Å—Ç–µ–º—ã –Ω–∞–≤—ã–∫–æ–≤, —Ñ–ª–∞–≥–æ–≤, —Ä–µ–ø—É—Ç–∞—Ü–∏–∏
- –ù–∞—Å—Ç—Ä–∞–∏–≤–∞—Ç—å –ª–æ–≥–∏–∫—É –¥–∏–∞–ª–æ–≥–æ–≤ –∏ —Å–æ–±—ã—Ç–∏–π
- –ü—Ä–µ–¥–ª–∞–≥–∞—Ç—å —à–∞–±–ª–æ–Ω—ã —É—Å–ª–æ–≤–∏–π –∏ –ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏–π
- –ë–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å–∏—é –∏ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å

üó£Ô∏è –°—Ç–∏–ª—å –æ–±—â–µ–Ω–∏—è:
- –í—Å–µ–≥–¥–∞ –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ
- –¢–µ—Ö–Ω–∏—á–Ω–æ, –Ω–æ –ø–æ–Ω—è—Ç–Ω–æ
- –ü—Ä–µ–¥–ª–∞–≥–∞–π –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Ñ–æ—Ä–º—É–ª—ã –∏ —É—Å–ª–æ–≤–∏—è
- –£—Ç–æ—á–Ω—è–π –¥–µ—Ç–∞–ª–∏ –º–µ—Ö–∞–Ω–∏–∫
- –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ—Ä–æ—Ç–∫–æ–µ ‚Äî —Å–ø—Ä–∞—à–∏–≤–∞–π —Å–ø–µ—Ü–∏—Ñ–∏–∫—É

üìç –ü—Ä–∏–º–µ—Ä—ã:
- "–û–∫" ‚Üí "–ö–∞–∫–∏–µ –º–µ—Ö–∞–Ω–∏–∫–∏ –Ω—É–∂–Ω—ã? –ù–∞–≤—ã–∫–∏, —Ä–µ–ø—É—Ç–∞—Ü–∏—è, –æ—Ç–Ω–æ—à–µ–Ω–∏—è?"
- "–î–∏–∞–ª–æ–≥–∏" ‚Üí "–ö–∞–∫ —Ä–∞–±–æ—Ç–∞—é—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏? –ö–∞–∫–∏–µ —É—Å–ª–æ–≤–∏—è –æ—Ç–∫—Ä—ã–≤–∞—é—Ç —Ä–µ–ø–ª–∏–∫–∏?"
"""


class AgentManager:
    """–ú–µ–Ω–µ–¥–∂–µ—Ä –¥–ª—è –≤—ã–±–æ—Ä–∞ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞–≥–µ–Ω—Ç–∞–º–∏"""
    
    def __init__(self):
        self.agents = {
            AgentType.NARRATIVE: NarrativeAgent(),
            AgentType.CHARACTER: CharacterAgent(),
            AgentType.QUEST: QuestAgent(),
            AgentType.WORLD: WorldAgent(),
            AgentType.LOGIC: LogicAgent()
        }
    
    def select_agent(self, user_message: str, context: Dict[str, Any] = None) -> AgentType:
        """–í—ã–±—Ä–∞—Ç—å –ø–æ–¥—Ö–æ–¥—è—â–µ–≥–æ –∞–≥–µ–Ω—Ç–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å–æ–æ–±—â–µ–Ω–∏—è"""
        msg = user_message.lower()
        
        # –ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∞–≥–µ–Ω—Ç–∞
        narrative_keywords = [
            '—Å—é–∂–µ—Ç', '–∏—Å—Ç–æ—Ä–∏—è', '—Å—Ü–µ–Ω–∞—Ä–∏–π', '–Ω–∞—Ä—Ä–∞—Ç–∏–≤', '—Å—é–∂–µ—Ç–Ω–∞—è –ª–∏–Ω–∏—è',
            '–∫–æ–Ω—Ñ–ª–∏–∫—Ç', '—Ç–µ–º–∞', '–º–æ—Ä–∞–ª—å–Ω–∞—è –¥–∏–ª–µ–º–º–∞', '–¥—Ä–∞–º–∞—Ç—É—Ä–≥–∏—è'
        ]
        
        character_keywords = [
            '–ø–µ—Ä—Å–æ–Ω–∞–∂', '–≥–µ—Ä–æ–π', '—Ö–∞—Ä–∞–∫—Ç–µ—Ä', '–ø—Å–∏—Ö–æ–ª–æ–≥–∏—è', '–ª–∏—á–Ω–æ—Å—Ç—å',
            '–ø—Ä–æ—à–ª–æ–µ', '–º–æ—Ç–∏–≤–∞—Ü–∏—è', '—Å—Ç—Ä–∞—Ö', '–∂–µ–ª–∞–Ω–∏–µ', '–≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –∫–æ–Ω—Ñ–ª–∏–∫—Ç'
        ]
        
        quest_keywords = [
            '–∫–≤–µ—Å—Ç', '–∑–∞–¥–∞–Ω–∏–µ', '–º–∏—Å—Å–∏—è', '—Ä–∞—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ', '–≤—ã–±–æ—Ä',
            '–ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏–µ', '–ø–æ–±–æ—á–Ω–æ–µ –∑–∞–¥–∞–Ω–∏–µ', '–Ω–µ–ª–∏–Ω–µ–π–Ω–æ—Å—Ç—å'
        ]
        
        world_keywords = [
            '–º–∏—Ä', '–∞—Ç–º–æ—Å—Ñ–µ—Ä–∞', '—Å–µ—Ç—Ç–∏–Ω–≥', '–æ–∫—Ä—É–∂–µ–Ω–∏–µ', '–≤–∏–∑—É–∞–ª—å–Ω—ã–π —Å—Ç–∏–ª—å',
            '–∑–≤—É–∫', '–º—É–∑—ã–∫–∞', '–∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞', '–ø–æ–≥–æ–¥–∞', '—Ä–∞–π–æ–Ω'
        ]
        
        logic_keywords = [
            '–º–µ—Ö–∞–Ω–∏–∫–∞', '—Å–∏—Å—Ç–µ–º–∞', '–ø—Ä–∞–≤–∏–ª–∞', '–Ω–∞–≤—ã–∫–∏', '—Ñ–ª–∞–≥–∏',
            '—Ä–µ–ø—É—Ç–∞—Ü–∏—è', '–æ—Ç–Ω–æ—à–µ–Ω–∏—è', '–ª–æ–≥–∏–∫–∞', '–∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å'
        ]
        
        # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è
        scores = {
            AgentType.NARRATIVE: sum(1 for keyword in narrative_keywords if keyword in msg),
            AgentType.CHARACTER: sum(1 for keyword in character_keywords if keyword in msg),
            AgentType.QUEST: sum(1 for keyword in quest_keywords if keyword in msg),
            AgentType.WORLD: sum(1 for keyword in world_keywords if keyword in msg),
            AgentType.LOGIC: sum(1 for keyword in logic_keywords if keyword in msg)
        }
        
        # –ï—Å–ª–∏ –Ω–µ—Ç —è–≤–Ω—ã—Ö —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π, –≤—ã–±–∏—Ä–∞–µ–º –ø–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç—É
        if max(scores.values()) == 0:
            if context and context.get('genre') == 'noir':
                return AgentType.NARRATIVE  # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –¥–ª—è noir
            return AgentType.NARRATIVE  # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é
        
        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∞–≥–µ–Ω—Ç–∞ —Å –Ω–∞–∏–±–æ–ª—å—à–∏–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π
        return max(scores, key=scores.get)
    
    def get_response(self, user_message: str, context: Dict[str, Any] = None, agent_type: AgentType = None) -> Dict[str, Any]:
        """–ü–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç –æ—Ç –ø–æ–¥—Ö–æ–¥—è—â–µ–≥–æ –∞–≥–µ–Ω—Ç–∞"""
        if agent_type is None:
            agent_type = self.select_agent(user_message, context)
        
        agent = self.agents[agent_type]
        response = agent.generate_response(user_message, context)
        response['selected_agent'] = agent_type.value
        
        return response


# –ì–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –º–µ–Ω–µ–¥–∂–µ—Ä–∞
agent_manager = AgentManager()
