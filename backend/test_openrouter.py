#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ OpenRouter API
"""
import os
import sys
import django
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ Django –ø—Ä–æ–µ–∫—Ç—É
sys.path.append(str(Path(__file__).parent))
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'nexus_backend.settings')
django.setup()

from django.conf import settings
from core.quest_generator import QuestGenerator

def test_openrouter_connection():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ OpenRouter"""
    print("üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ OpenRouter...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    print(f"API Key: {'‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' if settings.OPENROUTER_API_KEY else '‚ùå –ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'}")
    print(f"Base URL: {settings.OPENROUTER_BASE_URL}")
    print(f"Model: {settings.OPENROUTER_MODEL}")
    
    if not settings.OPENROUTER_API_KEY:
        print("‚ùå OPENROUTER_API_KEY –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ .env —Ñ–∞–π–ª–µ")
        return False
    
    # –°–æ–∑–¥–∞–µ–º –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä
    generator = QuestGenerator()
    
    # –¢–µ—Å—Ç–æ–≤—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç
    test_context = {
        'user_message': '–ü—Ä–∏–≤–µ—Ç! –Ø —Ö–æ—á—É —Å–æ–∑–¥–∞—Ç—å –¥–µ—Ç–µ–∫—Ç–∏–≤–Ω—É—é –∏—Å—Ç–æ—Ä–∏—é –≤ —Å—Ç–∏–ª–µ –Ω—É–∞—Ä.',
        'project_name': '–¢–µ—Å—Ç–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç',
        'genre': 'noir',
        'tone': 'dark-noir',
        'setting': '–ù–µ–æ–Ω–æ–≤—ã–µ —É–ª–∏—Ü—ã –±—É–¥—É—â–µ–≥–æ'
    }
    
    print("\nü§ñ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ...")
    try:
        response = generator.generate_chat_response(test_context)
        print("‚úÖ –û—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω!")
        print(f"–°–æ–æ–±—â–µ–Ω–∏–µ: {response.get('message', '–ù–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è')}")
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

if __name__ == "__main__":
    success = test_openrouter_connection()
    if success:
        print("\nüéâ OpenRouter –ø–æ–¥–∫–ª—é—á–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
    else:
        print("\nüí• –ü—Ä–æ–±–ª–µ–º–∞ —Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º –∫ OpenRouter")
