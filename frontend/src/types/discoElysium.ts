// Disco Elysium style types for Nexus Adventure

// Game Setting and Tone System
export interface GameSetting {
  genre: 'noir' | 'fantasy' | 'cyberpunk' | 'magical-realism' | 'post-apocalyptic' | 'detective' | 'horror' | 'comedy';
  emotionalTone: 'dark' | 'ironic' | 'romantic' | 'absurd' | 'inspiring' | 'melancholic' | 'hopeful' | 'chaotic';
  abstractionLevel: 'realistic' | 'metaphysical' | 'dreamlike' | 'hallucinatory';
  narrativeStyle: 'third-person' | 'first-person' | 'stream-of-consciousness' | 'epistolary';
  uiTheme: 'dark-noir' | 'bright-fantasy' | 'neon-cyber' | 'muted-realism' | 'dreamy-abstract';
}

export interface ToneTemplate {
  id: string;
  name: string;
  description: string;
  icon: string;
  color: string;
  statDescriptions: Record<string, string>;
  statHistories: Record<string, string>;
  uiTheme: string;
}

export interface DiscoElysiumStat {
  id: string;
  name: string;
  shortName: string;
  category: 'Intellect' | 'Psyche' | 'Physique' | 'Motorics';
  description: string;
  history: string;
  skills: string[];
  color: string;
  icon: string;
  value: number; // 0-10 for character creation
  modifier: number; // Calculated modifier (value - 5)
  isActive: boolean; // Whether this stat can be used
  isLocked: boolean; // Whether this stat is locked (red check failed)
}

export interface DiscoElysiumCharacter {
  id: string;
  name: string;
  portrait?: string;
  stats: {
    // Intellect (3 stats)
    logic: DiscoElysiumStat;
    rhetoric: DiscoElysiumStat;
    analysis: DiscoElysiumStat;
    
    // Psyche (3 stats)
    empathy: DiscoElysiumStat;
    volition: DiscoElysiumStat;
    intuition: DiscoElysiumStat;
    
    // Physique (3 stats)
    endurance: DiscoElysiumStat;
    shivers: DiscoElysiumStat;
    impulse: DiscoElysiumStat;
    
    // Motorics (3 stats)
    perception: DiscoElysiumStat;
    dexterity: DiscoElysiumStat;
    composure: DiscoElysiumStat;
  };
  // Character progression
  level: number;
  experience: number;
  experienceToNext: number;
  // Health and morale
  health: number;
  maxHealth: number;
  morale: number;
  maxMorale: number;
}

export interface SkillCheck {
  id: string;
  stat: keyof DiscoElysiumCharacter['stats'];
  difficulty: 'Trivial' | 'Easy' | 'Medium' | 'Hard' | 'Extreme' | 'Impossible';
  dcValue: number; // Difficulty Class value
  description: string;
  successText: string;
  failureText: string;
  criticalSuccessText?: string;
  criticalFailureText?: string;
  isPassive: boolean; // Passive check (automatic) vs Active (player choice)
  isRed: boolean; // Red checks (failure has consequences)
  isWhite: boolean; // White checks (can be retried)
  // AI Generation
  aiGeneratedOptions?: string[]; // Pre-generated dialogue options
  aiPrompt?: string; // Prompt used for AI generation
}

export interface DialogueNode {
  id: string;
  type: 'statement' | 'question' | 'choice' | 'skill_check' | 'narrative';
  speaker?: string;
  text: string;
  emotion?: 'neutral' | 'happy' | 'sad' | 'angry' | 'surprised' | 'confused';
  position: { x: number; y: number };
  
  // Skill Check specific
  skillCheck?: SkillCheck;
  
  // Choice specific
  choices?: DialogueChoice[];
  
  // Visual styling
  color?: string;
  icon?: string;
  
  // AI Generation
  isGenerated?: boolean;
  generationPrompt?: string;
  confidence?: number; // 0-1
}

export interface DialogueChoice {
  id: string;
  text: string;
  requiredSkill?: keyof DiscoElysiumCharacter['skills'];
  requiredValue?: number;
  skillCheck?: SkillCheck;
  nextNodeId?: string;
  consequence?: string;
  isLocked?: boolean;
  lockReason?: string;
}

export interface DialogueTree {
  id: string;
  title: string;
  description?: string;
  startNodeId: string;
  nodes: DialogueNode[];
  characters: string[];
  tags: string[];
  created_at: string;
  updated_at: string;
}

// Utility function for generating IDs
export function generateId(prefix: string = 'id'): string {
  return `${prefix}-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;
}

export interface RollResult {
  id: string;
  skillCheckId: string;
  characterId: string;
  diceRoll: number; // 1-20
  statValue: number;
  statModifier: number;
  total: number; // diceRoll + statModifier
  dcValue: number;
  isSuccess: boolean;
  isCriticalSuccess: boolean;
  isCriticalFailure: boolean;
  resultText: string;
  selectedOption?: string; // AI-generated option that was selected
  timestamp: string;
}

// Dice roll system
export interface DiceRoll {
  id: string;
  diceType: 'd4' | 'd6' | 'd8' | 'd10' | 'd12' | 'd20' | 'd100';
  result: number;
  maxValue: number;
  isCritical: boolean;
  timestamp: string;
}

// AI Dialogue Generation
export interface AIDialogueGeneration {
  id: string;
  stat: keyof DiscoElysiumCharacter['stats'];
  context: {
    character: string;
    situation: string;
    previousDialogue: string[];
    characterPersonality: string;
    mood: string;
    statValue: number;
    statModifier: number;
  };
  generatedOptions: AIDialogueOption[];
  selectedOption?: string;
  rollResult?: RollResult;
  timestamp: string;
}

export interface AIDialogueOption {
  id: string;
  text: string;
  stat: keyof DiscoElysiumCharacter['stats'];
  requiredValue: number;
  difficulty: 'Trivial' | 'Easy' | 'Medium' | 'Hard' | 'Extreme' | 'Impossible';
  dcValue: number;
  successText: string;
  failureText: string;
  isAvailable: boolean; // Based on stat value and roll
  confidence: number; // AI confidence in this option (0-1)
}

export interface AIGenerationRequest {
  type: 'dialogue' | 'choice' | 'narrative' | 'skill_check';
  context: {
    character?: string;
    situation?: string;
    previousDialogue?: string[];
    availableSkills?: string[];
    characterPersonality?: string;
    mood?: string;
  };
  constraints?: {
    maxLength?: number;
    tone?: 'formal' | 'casual' | 'dramatic' | 'comedic';
    style?: 'disco_elysium' | 'generic' | 'custom';
  };
}

export interface AIGenerationResponse {
  id: string;
  type: 'dialogue' | 'choice' | 'narrative' | 'skill_check';
  content: string;
  confidence: number;
  alternatives?: string[];
  metadata?: {
    tokens_used?: number;
    model?: string;
    generation_time?: number;
  };
}

export interface DialogueEditorState {
  selectedNodeId?: string;
  selectedCharacterId?: string;
  zoom: number;
  pan: { x: number; y: number };
  showGrid: boolean;
  showMinimap: boolean;
  autoSave: boolean;
  lastSaved?: string;
}

export interface DialogueValidationError {
  nodeId: string;
  type: 'missing_connection' | 'invalid_skill_check' | 'orphaned_node' | 'circular_reference';
  message: string;
  severity: 'warning' | 'error';
}

// Utility types
export type SkillCategory = 'Intellect' | 'Psyche' | 'Physique' | 'Motorics';
export type DifficultyLevel = 'Trivial' | 'Easy' | 'Medium' | 'Hard' | 'Extreme' | 'Impossible';
export type NodeType = 'statement' | 'question' | 'choice' | 'skill_check' | 'narrative';
export type EmotionType = 'neutral' | 'happy' | 'sad' | 'angry' | 'surprised' | 'confused';

// Constants
export const DIFFICULTY_DC_VALUES = {
  Trivial: 5,
  Easy: 10,
  Medium: 15,
  Hard: 20,
  Extreme: 25,
  Impossible: 30
} as const;

export const STAT_CATEGORIES = {
  Intellect: {
    color: '#3B82F6',
    stats: ['logic', 'rhetoric', 'analysis'],
    description: 'Thinking, reasoning, and understanding'
  },
  Psyche: {
    color: '#8B5CF6',
    stats: ['empathy', 'volition', 'intuition'],
    description: 'Emotions, willpower, and intuition'
  },
  Physique: {
    color: '#EF4444',
    stats: ['endurance', 'shivers', 'impulse'],
    description: 'Physical strength and resilience'
  },
  Motorics: {
    color: '#10B981',
    stats: ['perception', 'dexterity', 'composure'],
    description: 'Coordination, reflexes, and awareness'
  }
} as const;

// Character creation constants
export const CHARACTER_CREATION = {
  TOTAL_POINTS: 10, // Total points to distribute
  MIN_STAT_VALUE: 0,
  MAX_STAT_VALUE: 10,
  DEFAULT_STAT_VALUE: 0
} as const;

// Character creation stat definitions
export const CHARACTER_STATS = {
  // Intellect
  logic: {
    name: '–õ–æ–≥–∏–∫–∞',
    shortName: '–õ–æ–≥',
    description: '–°–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å –∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å, —Å—Ç—Ä–æ–∏—Ç—å –≤—ã–≤–æ–¥—ã –∏ —É–ª–∞–≤–ª–∏–≤–∞—Ç—å –Ω–µ—Å–æ—Å—Ç—ã–∫–æ–≤–∫–∏',
    history: '–¢—ã –≤—Å–µ–≥–¥–∞ –∑–∞–¥–∞—ë—à—å –≤–æ–ø—Ä–æ—Å—ã, –¥–∞–∂–µ —Ç–∞–º, –≥–¥–µ –Ω–µ —Å—Ç–æ–∏—Ç. –†–∞–∑–ª–æ–∂–∏—Ç—å –≤—Å—ë –ø–æ –ø–æ–ª–æ—á–∫–∞–º ‚Äî —ç—Ç–æ —Ç–≤–æ—è –≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç—å.',
    skills: ['–¥–µ–¥—É–∫—Ü–∏—è', '–ª–æ–≥–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑', '—Ä–∞–∑–æ–±–ª–∞—á–µ–Ω–∏–µ –ª–∂–∏', '–æ–ø—Ä–æ–≤–µ—Ä–∂–µ–Ω–∏–µ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤'],
    icon: 'üí°',
    category: 'Intellect' as const,
    color: '#3B82F6'
  },
  rhetoric: {
    name: '–†–∏—Ç–æ—Ä–∏–∫–∞',
    shortName: '–†–∏—Ç',
    description: '–ò—Å–∫—É—Å—Å—Ç–≤–æ —É–±–µ–∂–¥–∞—Ç—å, —Å–ø–æ—Ä–∏—Ç—å –∏ –¥–æ–º–∏–Ω–∏—Ä–æ–≤–∞—Ç—å —Å–ª–æ–≤–æ–º',
    history: '–°–ª–æ–≤–∞ ‚Äî —Ç–≤–æ–∏ –∫–ª–∏–Ω–∫–∏. –¢—ã —Å –¥–µ—Ç—Å—Ç–≤–∞ –≤—ã–∏–≥—Ä—ã–≤–∞–ª —Å—Å–æ—Ä—ã, –¥–∞–∂–µ –µ—Å–ª–∏ –±—ã–ª –Ω–µ–ø—Ä–∞–≤.',
    skills: ['–æ—Ä–∞—Ç–æ—Ä—Å—Ç–≤–æ', '–º–∞–Ω–∏–ø—É–ª—è—Ü–∏—è', '—É–±–µ–∂–¥–µ–Ω–∏–µ', '–≤–µ–¥–µ–Ω–∏–µ –ø–µ—Ä–µ–≥–æ–≤–æ—Ä–æ–≤'],
    icon: 'üó£Ô∏è',
    category: 'Intellect' as const,
    color: '#3B82F6'
  },
  analysis: {
    name: '–ê–Ω–∞–ª–∏–∑',
    shortName: '–ê–Ω–ª',
    description: '–°–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å –≤–∏–¥–µ—Ç—å —Å–≤—è–∑–∏, –ø—Ä–æ–≥–Ω–æ–∑–∏—Ä–æ–≤–∞—Ç—å –∏ –æ–±–æ–±—â–∞—Ç—å',
    history: '–¢—ã –∑–∞–º–µ—á–∞–µ—à—å –∑–∞–∫–æ–Ω–æ–º–µ—Ä–Ω–æ—Å—Ç–∏ —Ç–∞–º, –≥–¥–µ –¥—Ä—É–≥–∏–µ –≤–∏–¥—è—Ç —Ö–∞–æ—Å.',
    skills: ['—Å—Ç—Ä–∞—Ç–µ–≥–∏—á–µ—Å–∫–æ–µ –º—ã—à–ª–µ–Ω–∏–µ', '–∞–Ω–∞–ª–∏–∑ —Å–∏—Ç—É–∞—Ü–∏–∏', '–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ'],
    icon: 'üßÆ',
    category: 'Intellect' as const,
    color: '#3B82F6'
  },
  
  // Psyche
  empathy: {
    name: '–≠–º–ø–∞—Ç–∏—è',
    shortName: '–≠–º–ø',
    description: '–°–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å —á—É–≤—Å—Ç–≤–æ–≤–∞—Ç—å –¥—Ä—É–≥–∏—Ö, –∏—Ö —ç–º–æ—Ü–∏–∏ –∏ —Å–æ—Å—Ç–æ—è–Ω–∏–µ',
    history: '–¢—ã –≤—Å–µ–≥–¥–∞ –∑–Ω–∞–ª, –∫–æ–≥–¥–∞ –∫—Ç–æ-—Ç–æ –≤—Ä—ë—Ç, –≥—Ä—É—Å—Ç–∏—Ç –∏–ª–∏ –≤–ª—é–±–ª—ë–Ω.',
    skills: ['—á—Ç–µ–Ω–∏–µ —ç–º–æ—Ü–∏–π', '–Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –Ω–∞ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞', '–ø–æ–¥–¥–µ—Ä–∂–∫–∞', '–∏—Å–∫—Ä–µ–Ω–Ω–æ—Å—Ç—å'],
    icon: 'üíó',
    category: 'Psyche' as const,
    color: '#8B5CF6'
  },
  volition: {
    name: '–í–æ–ª—è',
    shortName: '–í–æ–ª',
    description: '–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è —É—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç—å, —Å–∏–ª–∞ –¥—É—Ö–∞ –∏ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å –¥–µ—Ä–∂–∞—Ç—å—Å—è',
    history: '–î–∞–∂–µ –∫–æ–≥–¥–∞ –≤–µ—Å—å –º–∏—Ä —Ä—É—à–∏–ª—Å—è, —Ç—ã —Å—Ç–æ—è–ª –Ω–∞ –Ω–æ–≥–∞—Ö.',
    skills: ['—Å–æ–ø—Ä–æ—Ç–∏–≤–ª–µ–Ω–∏–µ —Å—Ç—Ä–µ—Å—Å—É', '–º–æ—Ä–∞–ª—å–Ω–∞—è —Å—Ç–æ–π–∫–æ—Å—Ç—å', '–∫–æ–Ω—Ç—Ä–æ–ª—å —Å–µ–±—è –≤ –∫—Ä–∏—Ç–∏–∫–µ'],
    icon: 'üõ°Ô∏è',
    category: 'Psyche' as const,
    color: '#8B5CF6'
  },
  intuition: {
    name: '–ò–Ω—Ç—É–∏—Ü–∏—è',
    shortName: '–ò–Ω—Ç',
    description: '–ì–æ–ª–æ—Å –≤–Ω—É—Ç—Ä–∏. –ß—Ç–æ-—Ç–æ –≥–æ–≤–æ—Ä–∏—Ç —Ç–µ–±–µ "–Ω–µ –¥–µ–ª–∞–π —ç—Ç–æ–≥–æ", –∏ —Ç—ã —Å–ª—É—à–∞–µ—à—å',
    history: '–¢–≤–æ—è —á—É–π–∫–∞ —Å–ø–∞—Å–∞–ª–∞ —Ç–µ–±—è –Ω–µ —Ä–∞–∑. –ò –Ω–∏–∫—Ç–æ –Ω–µ –ø–æ–Ω–∏–º–∞–ª ‚Äî –∫–∞–∫?',
    skills: ['–ø—Ä–µ–¥—á—É–≤—Å—Ç–≤–∏–µ', '—à–µ—Å—Ç–æ–µ —á—É–≤—Å—Ç–≤–æ', '–ø—Ä–∏–Ω—è—Ç–∏–µ —Ä–µ—à–µ–Ω–∏–π –±–µ–∑ —Ñ–∞–∫—Ç–æ–≤'],
    icon: 'üåå',
    category: 'Psyche' as const,
    color: '#8B5CF6'
  },
  
  // Physique
  endurance: {
    name: '–í—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç—å',
    shortName: '–í—ã–Ω',
    description: '–°–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å —Ç–µ—Ä–ø–µ—Ç—å, —Ç—è–Ω—É—Ç—å, –≤—ã–∂–∏–≤–∞—Ç—å',
    history: '–°–∫–æ–ª—å–∫–æ –±—ã –Ω–∏ —à–ª–∏, —Ç—ã –≤—Å–µ–≥–¥–∞ –¥–æ–π–¥—ë—à—å –¥–æ –∫–æ–Ω—Ü–∞.',
    skills: ['—Ñ–∏–∑–∏—á–µ—Å–∫–∞—è –∂–∏–≤—É—á–µ—Å—Ç—å', '—Å–æ–ø—Ä–æ—Ç–∏–≤–ª–µ–Ω–∏–µ —É—Ä–æ–Ω—É', '–¥–ª–∏—Ç–µ–ª—å–Ω–æ–µ –Ω–∞–ø—Ä—è–∂–µ–Ω–∏–µ'],
    icon: 'üí™',
    category: 'Physique' as const,
    color: '#EF4444'
  },
  shivers: {
    name: '–ú—É—Ä–∞—à–∫–∏',
    shortName: '–ú—É—Ä',
    description: '–¢–≤–æ—è –∫–æ–∂–∞ —á—É–µ—Ç –ø—Ä–∏–±–ª–∏–∂–µ–Ω–∏–µ –±–µ–¥—ã. –•–æ–ª–æ–¥ –≤ –ø–æ–∑–≤–æ–Ω–æ—á–Ω–∏–∫–µ ‚Äî –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ',
    history: '–¢—ã –≤—Å–µ–≥–¥–∞ –ø–µ—Ä–≤—ã–º –∑–Ω–∞–ª, —á—Ç–æ "—á—Ç–æ-—Ç–æ –Ω–µ —Ç–∞–∫".',
    skills: ['–æ—â—É—â–µ–Ω–∏–µ –Ω–∞–¥–≤–∏–≥–∞—é—â–µ–π—Å—è –æ–ø–∞—Å–Ω–æ—Å—Ç–∏', '–≤–æ—Å–ø—Ä–∏—è—Ç–∏–µ –∞—Ç–º–æ—Å—Ñ–µ—Ä—ã', '—Å—Ç—Ä–∞—Ö'],
    icon: 'üò∞',
    category: 'Physique' as const,
    color: '#EF4444'
  },
  impulse: {
    name: '–ò–º–ø—É–ª—å—Å',
    shortName: '–ò–º–ø',
    description: '–í—Å–ø—ã—à–∫–∏, —Ä–µ–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å, —Å–∏–ª–∞ –≤–æ–ª–∏ –±–µ–∑ —Ñ–∏–ª—å—Ç—Ä–∞',
    history: '–¢—ã –¥–µ–π—Å—Ç–≤—É–µ—à—å –¥–æ —Ç–æ–≥–æ, –∫–∞–∫ –æ—Å–º—ã—Å–ª–∏—à—å. –ò–Ω–æ–≥–¥–∞ ‚Äî —ç—Ç–æ —Å–ø–∞—Å–∞–µ—Ç. –ò–Ω–æ–≥–¥–∞ ‚Äî –Ω–µ—Ç.',
    skills: ['–∞–≥—Ä–µ—Å—Å–∏—è', '—Å–ø–æ–Ω—Ç–∞–Ω–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è', '–∞—Ç–∞–∫–∞ –ø–µ—Ä–≤—ã–º'],
    icon: '‚ö°',
    category: 'Physique' as const,
    color: '#EF4444'
  },
  
  // Motorics
  perception: {
    name: '–í–æ—Å–ø—Ä–∏—è—Ç–∏–µ',
    shortName: '–í–æ—Å',
    description: '–ì–ª–∞–∑–∞, —É—à–∏, –∫–æ–∂–∞ ‚Äî —Ç–≤–æ–∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã. –¢—ã –∑–∞–º–µ—á–∞–µ—à—å –¥–µ—Ç–∞–ª–∏',
    history: '–¢—ã –∑–∞–º–µ—á–∞–ª –ø—è—Ç–Ω–∞ –∫—Ä–æ–≤–∏ –Ω–∞ –±–æ—Ç–∏–Ω–∫–∞—Ö, –∫–æ—Ç–æ—Ä—ã–µ –Ω–∏–∫—Ç–æ –Ω–µ –≤–∏–¥–µ–ª.',
    skills: ['–≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å', '–æ—Å—Ç—Ä–æ—Ç–∞ —á—É–≤—Å—Ç–≤', '–¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—è'],
    icon: 'üëÅÔ∏è',
    category: 'Motorics' as const,
    color: '#10B981'
  },
  dexterity: {
    name: '–õ–æ–≤–∫–æ—Å—Ç—å',
    shortName: '–õ–æ–≤',
    description: '–ü–ª–∞—Å—Ç–∏–∫–∞, —Å–∫–æ—Ä–æ—Å—Ç—å, —Ä–µ—Ñ–ª–µ–∫—Å—ã',
    history: '–¢–≤–æ—è —Ä—É–∫–∞ –ª–æ–≤–∏–ª–∞ –º—è—á –µ—â—ë –¥–æ —Ç–æ–≥–æ, –∫–∞–∫ –º–æ–∑–≥ –æ—Å–æ–∑–Ω–∞–ª, —á—Ç–æ –æ–Ω –ª–µ—Ç–∏—Ç.',
    skills: ['–∞–∫—Ä–æ–±–∞—Ç–∏–∫–∞', '—É—Ö–æ–¥ –æ—Ç –∞—Ç–∞–∫', '–ª–æ–≤–ª—è –ø—Ä–µ–¥–º–µ—Ç–æ–≤', '–∫—Ä–∞–∂–∞'],
    icon: 'üï∫',
    category: 'Motorics' as const,
    color: '#10B981'
  },
  composure: {
    name: '–°–∞–º–æ–æ–±–ª–∞–¥–∞–Ω–∏–µ',
    shortName: '–°–∞–º',
    description: '–ö–æ–Ω—Ç—Ä–æ–ª—å –Ω–∞–¥ –ª–∏—Ü–æ–º, –≥–æ–ª–æ—Å–æ–º, —Ç–µ–ª–æ–º. –¢—ã –Ω–µ –¥–∞—ë—à—å —Å–ª–∞–±–∏–Ω—É',
    history: '–î–∞–∂–µ –∫–æ–≥–¥–∞ —Ç–µ–±—è –±–∏–ª–∏ ‚Äî —Ç—ã –Ω–µ –ø–æ–∫–∞–∑–∞–ª —Å—Ç—Ä–∞—Ö–∞.',
    skills: ['—ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è –º–∞—Å–∫–∞', '–ø–æ–¥–∞–≤–ª–µ–Ω–∏–µ —Ä–µ–∞–∫—Ü–∏–∏', '–≤–Ω–µ—à–Ω—è—è —Å—Ç–æ–π–∫–æ—Å—Ç—å'],
    icon: 'üòê',
    category: 'Motorics' as const,
    color: '#10B981'
  },
} as const;

// Tone Templates for different genres
export const TONE_TEMPLATES: Record<string, ToneTemplate> = {
  noir: {
    id: 'noir',
    name: '–ù—É–∞—Ä',
    description: '–ú—Ä–∞—á–Ω—ã–π –¥–µ—Ç–µ–∫—Ç–∏–≤ —Å –¥–æ–∂–¥—ë–º, —Ç–µ–Ω—è–º–∏ –∏ –º–æ—Ä–∞–ª—å–Ω—ã–º–∏ –¥–∏–ª–µ–º–º–∞–º–∏',
    icon: 'üåßÔ∏è',
    color: '#1F2937',
    uiTheme: 'dark-noir',
    statDescriptions: {
      logic: '–•–æ–ª–æ–¥–Ω—ã–π –∞–Ω–∞–ª–∏–∑ —É–ª–∏–∫ –∏ –º–æ—Ç–∏–≤–æ–≤. –í –º–∏—Ä–µ –ª–∂–∏ —ç—Ç–æ —Ç–≤–æ–π –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π —è–∫–æ—Ä—å.',
      rhetoric: '–°–ª–æ–≤–∞ –∫–∞–∫ –Ω–æ–∂–∏ –≤ —Ç–µ–º–Ω–æ—Ç–µ. –¢—ã —É–º–µ–µ—à—å –≥–æ–≤–æ—Ä–∏—Ç—å —Ç–∞–∫, —á—Ç–æ –ª—é–¥–∏ —Ä–∞—Å–∫—Ä—ã–≤–∞—é—Ç—Å—è.',
      analysis: '–í–∏–¥–µ—Ç—å —Å–≤—è–∑–∏ —Ç–∞–º, –≥–¥–µ –¥—Ä—É–≥–∏–µ –≤–∏–¥—è—Ç —Ö–∞–æ—Å. –ü–∞—Ç—Ç–µ—Ä–Ω—ã –ø—Ä–µ—Å—Ç—É–ø–ª–µ–Ω–∏–π, –ø–∞—Ç—Ç–µ—Ä–Ω—ã –∂–∏–∑–Ω–∏.',
      empathy: '–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –≤—ã–∂–∏–≤–∞–Ω–∏—è –Ω–∞ —É–ª–∏—Ü–∞—Ö, –≥–¥–µ –ª–æ–∂—å ‚Äî –Ω–æ—Ä–º–∞. –ß—É–≤—Å—Ç–≤–æ–≤–∞—Ç—å, –∫–æ–≥–¥–∞ —Ç–µ–±—è –æ–±–º–∞–Ω—ã–≤–∞—é—Ç.',
      volition: '–í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π —Å—Ç–µ—Ä–∂–µ–Ω—å –≤ –º–∏—Ä–µ, –≥–¥–µ –≤—Å—ë —Ä—É—à–∏—Ç—Å—è. –î–µ—Ä–∂–∞—Ç—å—Å—è –∑–∞ —Å–≤–æ–∏ –ø—Ä–∏–Ω—Ü–∏–ø—ã.',
      intuition: '–ì–æ–ª–æ—Å —É–ª–∏—Ü. –ó–Ω–∞—Ç—å, –∫–æ–≥–¥–∞ —á—Ç–æ-—Ç–æ –Ω–µ —Ç–∞–∫, –µ—â—ë –¥–æ —Ç–æ–≥–æ, –∫–∞–∫ —ç—Ç–æ –ø—Ä–æ–∏–∑–æ–π–¥—ë—Ç.',
      endurance: '–í—ã–∂–∏–≤–∞—Ç—å –≤ –¥–æ–∂–¥—å, —Ö–æ–ª–æ–¥ –∏ –æ—Ç—á–∞—è–Ω–∏–µ. –¢–µ—Ä–ø–µ—Ç—å, –∫–æ–≥–¥–∞ –±–æ–ª—å—à–µ –Ω–µ—á–µ–≥–æ –¥–µ–ª–∞—Ç—å.',
      shivers: '–•–æ–ª–æ–¥ –ø–æ –∫–æ–∂–µ. –ü—Ä–µ–¥—á—É–≤—Å—Ç–≤–∏–µ –±–µ–¥—ã, –∫–æ—Ç–æ—Ä–æ–µ –Ω–µ –ø–æ–¥–≤–µ–¥—ë—Ç.',
      impulse: '–†–µ–∞–∫—Ü–∏—è –¥–æ –º—ã—Å–ª–∏. –í —Ç—ë–º–Ω–æ–º –ø–µ—Ä–µ—É–ª–∫–µ —ç—Ç–æ –º–æ–∂–µ—Ç —Å–ø–∞—Å—Ç–∏ –∂–∏–∑–Ω—å.',
      perception: '–ó–∞–º–µ—á–∞—Ç—å –¥–µ—Ç–∞–ª–∏ –≤ –ø–æ–ª—É–º—Ä–∞–∫–µ. –¢–µ–Ω–∏, –∫–æ—Ç–æ—Ä—ã–µ —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞—é—Ç –∏—Å—Ç–æ—Ä–∏–∏.',
      dexterity: '–ë—ã—Å—Ç—Ä—ã–µ —Ä—É–∫–∏ –≤ –º–µ–¥–ª–µ–Ω–Ω–æ–º –º–∏—Ä–µ. –õ–æ–≤–∫–æ—Å—Ç—å, –∫–æ—Ç–æ—Ä–∞—è —Å–ø–∞—Å–∞–µ—Ç –æ—Ç –ø—É–ª—å.',
      composure: '–ö–∞–º–µ–Ω–Ω–æ–µ –ª–∏—Ü–æ –≤ —à—Ç–æ—Ä–º–µ —ç–º–æ—Ü–∏–π. –ù–µ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å —Å—Ç—Ä–∞—Ö, –∫–æ–≥–¥–∞ –≤–Ω—É—Ç—Ä–∏ –≤—Å—ë –∫—Ä–∏—á–∏—Ç.'
    },
    statHistories: {
      logic: '–¢—ã –≤—Å–µ–≥–¥–∞ –≤–∏–¥–µ–ª –ª–æ–≥–∏–∫—É —Ç–∞–º, –≥–¥–µ –¥—Ä—É–≥–∏–µ –≤–∏–¥–µ–ª–∏ —Ö–∞–æ—Å. –£–ª–∏—Ü—ã –Ω–∞—É—á–∏–ª–∏ —Ç–µ–±—è —á–∏—Ç–∞—Ç—å –ª—é–¥–µ–π.',
      rhetoric: '–°–ª–æ–≤–∞ –±—ã–ª–∏ —Ç–≤–æ–∏–º –æ—Ä—É–∂–∏–µ–º –≤ –º–∏—Ä–µ, –≥–¥–µ –ø—Ä–∞–≤–¥–∞ ‚Äî —Ä–æ—Å–∫–æ—à—å.',
      analysis: '–¢—ã –Ω–∞—É—á–∏–ª—Å—è –≤–∏–¥–µ—Ç—å –∑–∞–∫–æ–Ω–æ–º–µ—Ä–Ω–æ—Å—Ç–∏ –≤ –ø—Ä–µ—Å—Ç—É–ø–ª–µ–Ω–∏—è—Ö, –ø–æ—Ç–æ–º—É —á—Ç–æ –∂–∏–∑–Ω—å —Å–∞–º–∞ –ø–æ —Å–µ–±–µ –ø—Ä–µ—Å—Ç—É–ø–ª–µ–Ω–∏–µ.',
      empathy: '–ù–∞ —É–ª–∏—Ü–∞—Ö —ç–º–ø–∞—Ç–∏—è ‚Äî —ç—Ç–æ –Ω–µ —Å–ª–∞–±–æ—Å—Ç—å, –∞ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å –≤—ã–∂–∏—Ç—å.',
      volition: '–ö–æ–≥–¥–∞ –≤–µ—Å—å –º–∏—Ä –ø—Ä–æ—Ç–∏–≤ —Ç–µ–±—è, –≤–æ–ª—è ‚Äî —ç—Ç–æ –≤—Å—ë, —á—Ç–æ —É —Ç–µ–±—è –æ—Å—Ç–∞—ë—Ç—Å—è.',
      intuition: '–£–ª–∏—Ü—ã –Ω–∞—É—á–∏–ª–∏ —Ç–µ–±—è –¥–æ–≤–µ—Ä—è—Ç—å —á—É–π–∫–µ –±–æ–ª—å—à–µ, —á–µ–º —Ñ–∞–∫—Ç–∞–º.',
      endurance: '–¢—ã –ø—Ä–æ—à—ë–ª —á–µ—Ä–µ–∑ –∞–¥ –∏ –≤—ã—à–µ–ª —Å –¥—Ä—É–≥–æ–π —Å—Ç–æ—Ä–æ–Ω—ã. –ù–µ —Å–ª–æ–º–∞–ª—Å—è.',
      shivers: '–¢–≤–æ—è –∫–æ–∂–∞ –ø–æ–º–Ω–∏—Ç –∫–∞–∂–¥—É—é –æ–ø–∞—Å–Ω–æ—Å—Ç—å. –•–æ–ª–æ–¥ –ø–æ —Å–ø–∏–Ω–µ ‚Äî –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ.',
      impulse: '–í —Ç—ë–º–Ω—ã—Ö –ø–µ—Ä–µ—É–ª–∫–∞—Ö –¥—É–º–∞—Ç—å –Ω–µ–∫–æ–≥–¥–∞. –î–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å –Ω—É–∂–Ω–æ –º–≥–Ω–æ–≤–µ–Ω–Ω–æ.',
      perception: '–¢—ã –Ω–∞—É—á–∏–ª—Å—è –≤–∏–¥–µ—Ç—å –≤ —Ç–µ–º–Ω–æ—Ç–µ —Ç–æ, —á—Ç–æ –¥—Ä—É–≥–∏–µ –Ω–µ –≤–∏–¥—è—Ç –ø—Ä–∏ —Å–≤–µ—Ç–µ.',
      dexterity: '–ë—ã—Å—Ç—Ä—ã–µ —Ä—É–∫–∏ —Å–ø–∞—Å–∞–ª–∏ —Ç–µ–±—è –Ω–µ —Ä–∞–∑. –†–µ—Ñ–ª–µ–∫—Å—ã, –∑–∞—Ç–æ—á–µ–Ω–Ω—ã–µ –Ω–∞ –≤—ã–∂–∏–≤–∞–Ω–∏–µ.',
      composure: '–¢—ã –Ω–∞—É—á–∏–ª—Å—è –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å —Å—Ç—Ä–∞—Ö, –¥–∞–∂–µ –∫–æ–≥–¥–∞ –≤–Ω—É—Ç—Ä–∏ –≤—Å—ë –¥—Ä–æ–∂–∏—Ç.'
    }
  },
  
  fantasy: {
    id: 'fantasy',
    name: '–§—ç–Ω—Ç–µ–∑–∏',
    description: '–ú–∞–≥–∏—á–µ—Å–∫–∏–π –º–∏—Ä —Å –¥—Ä–∞–∫–æ–Ω–∞–º–∏, —ç–ª—å—Ñ–∞–º–∏ –∏ –¥—Ä–µ–≤–Ω–∏–º–∏ —Ç–∞–π–Ω–∞–º–∏',
    icon: 'üßô‚Äç‚ôÇÔ∏è',
    color: '#7C3AED',
    uiTheme: 'bright-fantasy',
    statDescriptions: {
      logic: '–ú—É–¥—Ä–æ—Å—Ç—å –≤–µ–∫–æ–≤ –∏ –ø–æ–Ω–∏–º–∞–Ω–∏–µ –º–∞–≥–∏—á–µ—Å–∫–∏—Ö –∑–∞–∫–æ–Ω–æ–≤. –õ–æ–≥–∏–∫–∞ –≤ –º–∏—Ä–µ —á—É–¥–µ—Å.',
      rhetoric: '–ò—Å–∫—É—Å—Å—Ç–≤–æ –∑–∞—á–∞—Ä–æ–≤—ã–≤–∞—Ç—å —Å–ª–æ–≤–æ–º. –ì–æ–≤–æ—Ä–∏—Ç—å —Ç–∞–∫, —á—Ç–æ –¥–∞–∂–µ –¥—Ä–∞–∫–æ–Ω—ã —Å–ª—É—à–∞—é—Ç.',
      analysis: '–ß–∏—Ç–∞—Ç—å –¥—Ä–µ–≤–Ω–∏–µ —Ç–µ–∫—Å—Ç—ã –∏ –ø–æ–Ω–∏–º–∞—Ç—å —è–∑—ã–∫ –∑–≤—ë–∑–¥. –ê–Ω–∞–ª–∏–∑ –º–∞–≥–∏—á–µ—Å–∫–∏—Ö –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤.',
      empathy: '–î–∞—Ä —Å–ª—É—à–∞—Ç—å —ç—Ö–æ —á—É–∂–∏—Ö –¥—É—à. –ü–æ–Ω–∏–º–∞—Ç—å —Å–µ—Ä–¥—Ü–∞ –≤—Å–µ—Ö –∂–∏–≤—ã—Ö —Å—É—â–µ—Å—Ç–≤.',
      volition: '–°–∏–ª–∞ –¥—É—Ö–∞, —Å–ø–æ—Å–æ–±–Ω–∞—è –ø—Ä–æ—Ç–∏–≤–æ—Å—Ç–æ—è—Ç—å —Ç—ë–º–Ω–æ–π –º–∞–≥–∏–∏. –ù–µ–ø–æ–∫–æ–ª–µ–±–∏–º–∞—è –≤–æ–ª—è.',
      intuition: '–ú–∞–≥–∏—á–µ—Å–∫–æ–µ —á—É—Ç—å—ë. –°–ª—ã—à–∞—Ç—å —à—ë–ø–æ—Ç –¥—É—Ö–æ–≤ –∏ –ø—Ä–µ–¥—á—É–≤—Å—Ç–≤–æ–≤–∞—Ç—å —Å—É–¥—å–±—É.',
      endurance: '–í—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç—å –≥–µ—Ä–æ—è, —Å–ø–æ—Å–æ–±–Ω–æ–≥–æ –ø—Ä–æ–π—Ç–∏ —á–µ—Ä–µ–∑ –ª—é–±—ã–µ –∏—Å–ø—ã—Ç–∞–Ω–∏—è.',
      shivers: '–ß—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∫ –º–∞–≥–∏—á–µ—Å–∫–∏–º –ø–æ—Ç–æ–∫–∞–º. –û—â—É—â–∞—Ç—å –ø—Ä–∏–±–ª–∏–∂–µ–Ω–∏–µ —Ç—ë–º–Ω—ã—Ö —Å–∏–ª.',
      impulse: '–†–µ–∞–∫—Ü–∏—è –≤–æ–∏–Ω–∞, –∑–∞–∫–∞–ª—ë–Ω–Ω–æ–≥–æ –≤ –±–∏—Ç–≤–∞—Ö. –ò–Ω—Å—Ç–∏–Ω–∫—Ç—ã, —Å–ø–∞—Å–∞—é—â–∏–µ –∂–∏–∑–Ω—å.',
      perception: '–ó—Ä–µ–Ω–∏–µ –æ—Ä–ª–∞, —Å–ª—É—Ö –∫–æ—à–∫–∏. –ó–∞–º–µ—á–∞—Ç—å —Ç–æ, —á—Ç–æ —Å–∫—Ä—ã—Ç–æ –æ—Ç —Å–º–µ—Ä—Ç–Ω—ã—Ö –≥–ª–∞–∑.',
      dexterity: '–õ–æ–≤–∫–æ—Å—Ç—å —ç–ª—å—Ñ–∞, –≥—Ä–∞—Ü–∏—è –∫–æ—à–∫–∏. –î–≤–∏–∂–µ–Ω–∏—è, –∑–∞—á–∞—Ä–æ–≤–∞–Ω–Ω—ã–µ –º–∞–≥–∏–µ–π.',
      composure: '–°–ø–æ–∫–æ–π—Å—Ç–≤–∏–µ –º—É–¥—Ä–µ—Ü–∞. –°–æ—Ö—Ä–∞–Ω—è—Ç—å —è—Å–Ω–æ—Å—Ç—å —É–º–∞ –≤ —Å–∞–º—ã—Ö –±–µ–∑—É–º–Ω—ã—Ö —Å–∏—Ç—É–∞—Ü–∏—è—Ö.'
    },
    statHistories: {
      logic: '–¢—ã –∏–∑—É—á–∞–ª –¥—Ä–µ–≤–Ω–∏–µ –∫–Ω–∏–≥–∏ –∏ –ø–æ—Å—Ç–∏–≥–∞–ª –º—É–¥—Ä–æ—Å—Ç—å –≤–µ–∫–æ–≤. –õ–æ–≥–∏–∫–∞ ‚Äî —Ç–≤–æ–π –º–∞–≥–∏—á–µ—Å–∫–∏–π –¥–∞—Ä.',
      rhetoric: '–¢—ã –Ω–∞—É—á–∏–ª—Å—è –≥–æ–≤–æ—Ä–∏—Ç—å –Ω–∞ —è–∑—ã–∫–µ –¥—Ä–∞–∫–æ–Ω–æ–≤ –∏ –∑–∞—á–∞—Ä–æ–≤—ã–≤–∞—Ç—å —Å–ª–æ–≤–æ–º.',
      analysis: '–ú–∞–≥–∏—á–µ—Å–∫–∏–µ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç—ã —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞–ª–∏ —Ç–µ–±–µ —Å–≤–æ–∏ –∏—Å—Ç–æ—Ä–∏–∏. –¢—ã –Ω–∞—É—á–∏–ª—Å—è –∏—Ö —Å–ª—É—à–∞—Ç—å.',
      empathy: '–¢—ã —Å–ª—ã—à–∞–ª –ø–µ—Å–Ω–∏ —ç–ª—å—Ñ–æ–≤ –∏ –ø–ª–∞—á –µ–¥–∏–Ω–æ—Ä–æ–≥–æ–≤. –≠–º–ø–∞—Ç–∏—è ‚Äî —Ç–≤–æ–π –¥–∞—Ä –æ—Ç –ø—Ä–∏—Ä–æ–¥—ã.',
      volition: '–¢—ã –ø—Ä–æ—Ç–∏–≤–æ—Å—Ç–æ—è–ª —Ç—ë–º–Ω—ã–º –ª–æ—Ä–¥–∞–º –∏ –Ω–µ –¥—Ä–æ–≥–Ω—É–ª. –í–æ–ª—è ‚Äî —Ç–≤–æ—è —Å–∏–ª–∞.',
      intuition: '–î—É—Ö–∏ –≥–æ–≤–æ—Ä–∏–ª–∏ —Å —Ç–æ–±–æ–π –≤–æ —Å–Ω–∞—Ö. –¢–≤–æ—è –∏–Ω—Ç—É–∏—Ü–∏—è ‚Äî –≥–æ–ª–æ—Å –¥—Ä–µ–≤–Ω–µ–π –º–∞–≥–∏–∏.',
      endurance: '–¢—ã –ø—Ä–æ—à—ë–ª —á–µ—Ä–µ–∑ –æ–≥–Ω–µ–Ω–Ω—ã–µ –≥–æ—Ä—ã –∏ –ª–µ–¥—è–Ω—ã–µ –ø—É—Å—Ç—ã–Ω–∏. –í—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç—å ‚Äî —Ç–≤–æ—è —Å—É—Ç—å.',
      shivers: '–¢–≤–æ—è –∫–æ–∂–∞ —á—É–≤—Å—Ç–≤–æ–≤–∞–ª–∞ –ø—Ä–∏–±–ª–∏–∂–µ–Ω–∏–µ —Ç—ë–º–Ω—ã—Ö –º–∞–≥–æ–≤. –ú–∞–≥–∏—á–µ—Å–∫–æ–µ –ø—Ä–µ–¥—á—É–≤—Å—Ç–≤–∏–µ.',
      impulse: '–í –±–∏—Ç–≤–∞—Ö —Å –æ—Ä–∫–∞–º–∏ —Ç—ã –¥–µ–π—Å—Ç–≤–æ–≤–∞–ª –±–µ–∑ —Ä–∞–∑–¥—É–º–∏–π. –ò–Ω—Å—Ç–∏–Ω–∫—Ç—ã –≤–æ–∏–Ω–∞.',
      perception: '–¢—ã –≤–∏–¥–µ–ª —Ç–æ, —á—Ç–æ —Å–∫—Ä—ã—Ç–æ –∑–∞ –∑–∞–≤–µ—Å–æ–π —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏. –ú–∞–≥–∏—á–µ—Å–∫–æ–µ –∑—Ä–µ–Ω–∏–µ.',
      dexterity: '–¢—ã —Ç–∞–Ω—Ü–µ–≤–∞–ª —Å —ç–ª—å—Ñ–∞–º–∏ –∏ –ª–µ—Ç–∞–ª —Å –¥—Ä–∞–∫–æ–Ω–∞–º–∏. –õ–æ–≤–∫–æ—Å—Ç—å ‚Äî —Ç–≤–æ–π –¥–∞—Ä.',
      composure: '–î–∞–∂–µ –ø–µ—Ä–µ–¥ –ª–∏—Ü–æ–º –¥—Ä–∞–∫–æ–Ω–∞ —Ç—ã –æ—Å—Ç–∞–≤–∞–ª—Å—è —Å–ø–æ–∫–æ–µ–Ω. –•–ª–∞–¥–Ω–æ–∫—Ä–æ–≤–∏–µ –≥–µ—Ä–æ—è.'
    }
  },
  
  cyberpunk: {
    id: 'cyberpunk',
    name: '–ö–∏–±–µ—Ä–ø–∞–Ω–∫',
    description: '–ù–µ–æ–Ω–æ–≤–æ–µ –±—É–¥—É—â–µ–µ —Å –∫–∏–±–æ—Ä–≥–∞–º–∏, —Ö–∞–∫–µ—Ä–∞–º–∏ –∏ –∫–æ—Ä–ø–æ—Ä–∞—Ü–∏—è–º–∏',
    icon: 'ü§ñ',
    color: '#EC4899',
    uiTheme: 'neon-cyber',
    statDescriptions: {
      logic: '–ê–ª–≥–æ—Ä–∏—Ç–º–∏—á–µ—Å–∫–æ–µ –º—ã—à–ª–µ–Ω–∏–µ –≤ –º–∏—Ä–µ, –≥–¥–µ –≤—Å—ë ‚Äî –∫–æ–¥. –õ–æ–≥–∏–∫–∞ –∫–∞–∫ –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞.',
      rhetoric: '–í–∏—Ä—Ç—É–∞–ª—å–Ω–∞—è —Ö–∞—Ä–∏–∑–º–∞. –£–±–µ–∂–¥–∞—Ç—å —á–µ—Ä–µ–∑ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã –∏ –Ω–µ–π—Ä–æ—Å–µ—Ç–∏.',
      analysis: '–ê–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏. –í–∏–¥–µ—Ç—å –ø–∞—Ç—Ç–µ—Ä–Ω—ã –≤ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã—Ö –ø–æ—Ç–æ–∫–∞—Ö.',
      empathy: '–≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å. –ß–∏—Ç–∞—Ç—å –ª—é–¥–µ–π —á–µ—Ä–µ–∑ –∏—Ö —Ü–∏—Ñ—Ä–æ–≤—ã–µ —Å–ª–µ–¥—ã.',
      volition: '–ó–∞—â–∏—Ç–∞ –æ—Ç –º–µ–Ω—Ç–∞–ª—å–Ω—ã—Ö –∞—Ç–∞–∫. –°–æ—Ö—Ä–∞–Ω—è—Ç—å –ª–∏—á–Ω–æ—Å—Ç—å –≤ —Ü–∏—Ñ—Ä–æ–≤–æ–º —Ö–∞–æ—Å–µ.',
      intuition: '–ù–µ–π—Ä–æ–∏–Ω—Ç—É–∏—Ü–∏—è. –ü—Ä–µ–¥—á—É–≤—Å—Ç–≤–æ–≤–∞—Ç—å –∫–∏–±–µ—Ä–∞—Ç–∞–∫–∏ –∏ —Ü–∏—Ñ—Ä–æ–≤—ã–µ –ª–æ–≤—É—à–∫–∏.',
      endurance: '–ö–∏–±–µ—Ä–Ω–µ—Ç–∏—á–µ—Å–∫–∞—è –≤—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç—å. –†–∞–±–æ—Ç–∞—Ç—å –±–µ–∑ —Å–Ω–∞ –≤ —Ü–∏—Ñ—Ä–æ–≤–æ–º –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ.',
      shivers: '–°–µ–Ω—Å–æ—Ä—ã —É–≥—Ä–æ–∑. –û—â—É—â–∞—Ç—å –ø—Ä–∏–±–ª–∏–∂–µ–Ω–∏–µ –≤–∏—Ä—É—Å–æ–≤ –∏ —Ö–∞–∫–µ—Ä—Å–∫–∏—Ö –∞—Ç–∞–∫.',
      impulse: '–†–µ—Ñ–ª–µ–∫—Å—ã –∫–∏–±–æ—Ä–≥–∞. –†–µ–∞–≥–∏—Ä–æ–≤–∞—Ç—å –Ω–∞ —É–≥—Ä–æ–∑—ã —Å–æ —Å–∫–æ—Ä–æ—Å—Ç—å—é –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–∞.',
      perception: '–£–ª—É—á—à–µ–Ω–Ω–æ–µ –≤–æ—Å–ø—Ä–∏—è—Ç–∏–µ. –í–∏–¥–µ—Ç—å –≤ –∏–Ω—Ñ—Ä–∞–∫—Ä–∞—Å–Ω–æ–º —Å–ø–µ–∫—Ç—Ä–µ –∏ –∑–∞ —Å—Ç–µ–Ω–∞–º–∏.',
      dexterity: '–¢–æ—á–Ω–æ—Å—Ç—å —Ä–æ–±–æ—Ç–∞. –í—ã–ø–æ–ª–Ω—è—Ç—å –¥–≤–∏–∂–µ–Ω–∏—è —Å –∫–∏–±–µ—Ä–Ω–µ—Ç–∏—á–µ—Å–∫–æ–π —Ç–æ—á–Ω–æ—Å—Ç—å—é.',
      composure: '–≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –∫–æ–Ω—Ç—Ä–æ–ª—å. –ü–æ–¥–∞–≤–ª—è—Ç—å –ø–∞–Ω–∏–∫—É –≤ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –º–æ–º–µ–Ω—Ç—ã.'
    },
    statHistories: {
      logic: '–¢—ã –Ω–∞—É—á–∏–ª—Å—è –º—ã—Å–ª–∏—Ç—å –∫–∞–∫ –º–∞—à–∏–Ω–∞ –≤ –º–∏—Ä–µ, –≥–¥–µ –ª—é–¥–∏ –∏ —Ä–æ–±–æ—Ç—ã —Å–ª–∏–≤–∞—é—Ç—Å—è.',
      rhetoric: '–¢–≤–æ–∏ —Å–ª–æ–≤–∞ –ø—Ä–æ–Ω–∏–∫–∞—é—Ç —á–µ—Ä–µ–∑ —Ü–∏—Ñ—Ä–æ–≤—ã–µ –±–∞—Ä—å–µ—Ä—ã –∏ –Ω–µ–π—Ä–æ—Å–µ—Ç–∏.',
      analysis: '–¢—ã —á–∏—Ç–∞–µ—à—å –¥–∞–Ω–Ω—ã–µ –∫–∞–∫ –æ—Ç–∫—Ä—ã—Ç—É—é –∫–Ω–∏–≥—É, –≤–∏–¥—è —Å–∫—Ä—ã—Ç—ã–µ —Å–≤—è–∑–∏.',
      empathy: '–¢—ã —á—É–≤—Å—Ç–≤—É–µ—à—å —ç–º–æ—Ü–∏–∏ —á–µ—Ä–µ–∑ –∏—Ö —Ü–∏—Ñ—Ä–æ–≤—ã–µ –æ—Ç–ø–µ—á–∞—Ç–∫–∏.',
      volition: '–¢–≤–æ—è –≤–æ–ª—è ‚Äî –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–∞—è –∑–∞—â–∏—Ç–∞ –æ—Ç –º–µ–Ω—Ç–∞–ª—å–Ω–æ–≥–æ –≤–∑–ª–æ–º–∞.',
      intuition: '–¢–≤–æ—è –∏–Ω—Ç—É–∏—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–∞–∫ –∞–Ω—Ç–∏–≤–∏—Ä—É—Å, –ø—Ä–µ–¥—á—É–≤—Å—Ç–≤—É—è —É–≥—Ä–æ–∑—ã.',
      endurance: '–¢—ã –º–æ–∂–µ—à—å —Ä–∞–±–æ—Ç–∞—Ç—å –≤ —Ü–∏—Ñ—Ä–æ–≤–æ–º –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ —Å—É—Ç–∫–∞–º–∏ –±–µ–∑ —É—Å—Ç–∞–ª–æ—Å—Ç–∏.',
      shivers: '–¢–≤–æ–∏ —Å–µ–Ω—Å–æ—Ä—ã –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–∞—é—Ç –æ –∫–∏–±–µ—Ä–∞—Ç–∞–∫–∞—Ö –µ—â—ë –¥–æ –∏—Ö –Ω–∞—á–∞–ª–∞.',
      impulse: '–¢–≤–æ–∏ —Ä–µ—Ñ–ª–µ–∫—Å—ã —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã —Å –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–æ–º.',
      perception: '–¢–≤–æ–∏ –≥–ª–∞–∑–∞ –≤–∏–¥—è—Ç —Ç–æ, —á—Ç–æ —Å–∫—Ä—ã—Ç–æ –æ—Ç –æ–±—ã—á–Ω—ã—Ö –ª—é–¥–µ–π.',
      dexterity: '–¢–≤–æ—è –ª–æ–≤–∫–æ—Å—Ç—å —É—Å–∏–ª–µ–Ω–∞ –∫–∏–±–µ—Ä–Ω–µ—Ç–∏—á–µ—Å–∫–∏–º–∏ –∏–º–ø–ª–∞–Ω—Ç–∞–º–∏.',
      composure: '–¢—ã —Å–æ—Ö—Ä–∞–Ω—è–µ—à—å —Ö–ª–∞–¥–Ω–æ–∫—Ä–æ–≤–∏–µ –¥–∞–∂–µ –ø—Ä–∏ —Å–±–æ–µ —Å–∏—Å—Ç–µ–º—ã.'
    }
  }
} as const;

// Roll result types for dialogue options
export const ROLL_RESULT_TYPES = {
  CRITICAL_SUCCESS: {
    color: '#10B981',
    icon: 'üéØ',
    name: 'Critical Success',
    description: 'Exceptional performance'
  },
  SUCCESS: {
    color: '#3B82F6',
    icon: '‚úÖ',
    name: 'Success',
    description: 'Good result'
  },
  FAILURE: {
    color: '#EF4444',
    icon: '‚ùå',
    name: 'Failure',
    description: 'Poor performance'
  },
  ALTERNATIVE: {
    color: '#6B7280',
    icon: 'ü§î',
    name: 'Alternative',
    description: 'Different approach'
  }
} as const;
