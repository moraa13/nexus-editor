import { useState } from 'react';
import { ToastContainer, toast } from '../ui/SimpleToast';
import CharacterCreator from '../character/CharacterCreator';
import SettingPanel from '../setting/SettingPanel';
import TonePanel from '../setting/TonePanel';
import ProjectManager from '../project/ProjectManager';
import DemoQuest from '../quest/DemoQuest';
import type { DiscoElysiumCharacter, GameSetting } from '../../types/discoElysium';
import type { ProjectSettings } from '../../types/project';
import { AIService } from '../../services/aiService';
import { ProjectManager as PM } from '../../types/project';

interface AdventureLayoutProps {
  children?: React.ReactNode;
  onNavigateToLanding?: () => void;
}

export default function AdventureLayout({ children: _, onNavigateToLanding }: AdventureLayoutProps) {
  const [activeSection, setActiveSection] = useState<'characters' | 'events' | 'branches' | 'projects'>('characters');
  const [selectedAction, setSelectedAction] = useState<'create-character' | 'create-event' | 'event-branch' | 'open-project' | 'game-setting' | 'game-tone' | 'manage-projects' | null>(null);
  const [selectedCharacterStat, setSelectedCharacterStat] = useState<{
    stat: string, 
    description: string, 
    history: string, 
    skills: string[],
    icon?: string,
    category?: string,
    categoryName?: string
  } | null>(null);
  const [characters, setCharacters] = useState<DiscoElysiumCharacter[]>([]);
  const [activeTab, setActiveTab] = useState<'description' | 'history' | 'skills'>('description');
  const [gameSetting, setGameSetting] = useState<GameSetting>({
    genre: 'noir',
    emotionalTone: 'dark',
    abstractionLevel: 'realistic',
    narrativeStyle: 'first-person',
    uiTheme: 'dark-noir'
  });
  const [gameTone, setGameTone] = useState({
    mood: 'dark-noir' as 'dark-noir' | 'satire' | 'absurd' | 'heroic' | 'psychological-drama',
    descriptionStyle: 'serious' as 'serious' | 'ironic' | 'roleplay',
    uiTheme: 'classic-dark' as 'classic-dark' | 'cyberpunk' | 'paper-diary' | 'retro'
  });
  const [currentProject, setCurrentProject] = useState<ProjectSettings | null>(null);
  const [isGenerating, setIsGenerating] = useState(false);
  const [showDemoQuest, setShowDemoQuest] = useState(false);

  const handleActionClick = (action: 'create-character' | 'create-event' | 'event-branch' | 'open-project' | 'game-setting' | 'game-tone' | 'manage-projects') => {
    setSelectedAction(action);
  };

  const handleClosePanel = () => {
    setSelectedAction(null);
  };

  const handleGenerateText = async () => {
    if (!selectedCharacterStat || !currentProject) {
      toast.error('–í—ã–±–µ—Ä–∏—Ç–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫—É –∏ –æ—Ç–∫—Ä–æ–π—Ç–µ –ø—Ä–æ–µ–∫—Ç');
      return;
    }

    setIsGenerating(true);
    try {
      const response = await AIService.generateStatContent({
        statName: selectedCharacterStat.stat,
        category: selectedCharacterStat.categoryName || 'Unknown',
        tone: currentProject.gameTone,
        existingContent: {
          description: selectedCharacterStat.description,
          history: selectedCharacterStat.history,
          skills: selectedCharacterStat.skills
        }
      });

      // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏
      setSelectedCharacterStat({
        ...selectedCharacterStat,
        description: response.description,
        history: response.history,
        skills: response.skills
      });

      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –ø—Ä–æ–µ–∫—Ç
      if (currentProject) {
        const updatedProject = {
          ...currentProject,
          generatedContent: {
            ...currentProject.generatedContent,
            statDescriptions: {
              ...currentProject.generatedContent.statDescriptions,
              [selectedCharacterStat.stat]: {
                description: response.description,
                history: response.history,
                skills: response.skills,
                lastGenerated: response.metadata.generatedAt
              }
            }
          }
        };
        PM.saveProject(updatedProject);
        setCurrentProject(updatedProject);
      }

      toast.success(`‚ú® –ö–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è "${selectedCharacterStat.stat}" —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω!`);
    } catch (error) {
      toast.error(error instanceof Error ? error.message : '–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏');
    } finally {
      setIsGenerating(false);
    }
  };

  return (
    <div className="min-h-screen bg-gray-900 text-white flex flex-col">
      {/* Top Header Bar */}
      <div className="bg-gray-800 border-b border-gray-700 px-6 py-4 flex items-center justify-between">
        <div className="flex items-center gap-6">
          <div className="flex items-center gap-2">
            <div className="w-6 h-6 bg-blue-600 rounded-full flex items-center justify-center">
              <span className="text-white text-xs font-bold">N</span>
            </div>
            <span className="text-white font-medium">Nexus</span>
          </div>
          {currentProject ? (
            <div className="flex items-center gap-2">
              <div className="w-6 h-6 bg-green-600 rounded-full flex items-center justify-center">
                <span className="text-white text-xs">üìÅ</span>
              </div>
              <span className="text-white font-medium">{currentProject.name}</span>
              <span className="text-xs text-gray-400">
                {currentProject.gameTone.mood} ‚Ä¢ {currentProject.gameTone.descriptionStyle}
              </span>
            </div>
          ) : (
            <div className="flex items-center gap-2">
              <div className="w-6 h-6 bg-gray-600 rounded-full flex items-center justify-center">
                <span className="text-white text-xs">‚ùì</span>
              </div>
              <span className="text-gray-400 font-medium">–ü—Ä–æ–µ–∫—Ç –Ω–µ –≤—ã–±—Ä–∞–Ω</span>
            </div>
          )}
        </div>
        
        <div className="flex items-center gap-2">
          {onNavigateToLanding && (
            <button
              onClick={onNavigateToLanding}
              className="flex items-center gap-2 px-3 py-2 rounded-lg bg-gray-700 hover:bg-gray-600 transition-colors"
            >
              <div className="w-6 h-6 bg-blue-600 rounded-full flex items-center justify-center">
                <span className="text-white text-xs">‚Üê</span>
              </div>
              <span className="text-white font-medium">–ù–∞–∑–∞–¥</span>
            </button>
          )}
        </div>
      </div>

      <div className="flex flex-1">
        {/* Left Sidebar */}
        <div className="w-64 bg-gray-800 border-r border-gray-700 p-4">
          <nav className="space-y-2">
            <button
              onClick={() => setActiveSection('characters')}
              className={`w-full flex items-center gap-3 px-4 py-3 rounded-lg text-left transition-colors ${
                activeSection === 'characters' 
                  ? 'bg-blue-600 text-white' 
                  : 'text-gray-300 hover:bg-gray-700 hover:text-white'
              }`}
            >
              <span className="text-xl">üéÆ</span>
              <span className="font-medium">–ü–µ—Ä—Å–æ–Ω–∞–∂</span>
              {characters.length > 0 && (
                <span className="ml-auto text-xs bg-green-500 text-white px-2 py-1 rounded-full">
                  ‚úì
                </span>
              )}
            </button>
            
            <button
              onClick={() => setActiveSection('events')}
              className={`w-full flex items-center gap-3 px-4 py-3 rounded-lg text-left transition-colors ${
                activeSection === 'events' 
                  ? 'bg-blue-600 text-white' 
                  : 'text-gray-300 hover:bg-gray-700 hover:text-white'
              }`}
            >
              <span className="text-xl">üë•</span>
              <span className="font-medium">–°–æ–±—ã—Ç–∏—è</span>
            </button>
            
            <button
              onClick={() => setActiveSection('branches')}
              className={`w-full flex items-center gap-3 px-4 py-3 rounded-lg text-left transition-colors ${
                activeSection === 'branches' 
                  ? 'bg-blue-600 text-white' 
                  : 'text-gray-300 hover:bg-gray-700 hover:text-white'
              }`}
            >
              <span className="text-xl">üìú</span>
              <span className="font-medium">–ö–≤–µ—Å—Ç—ã</span>
            </button>
            
            <button
              onClick={() => setActiveSection('projects')}
              className={`w-full flex items-center gap-3 px-4 py-3 rounded-lg text-left transition-colors ${
                activeSection === 'projects' 
                  ? 'bg-blue-600 text-white' 
                  : 'text-gray-300 hover:bg-gray-700 hover:text-white'
              }`}
            >
              <span className="text-xl">üìã</span>
              <span className="font-medium">–ü—Ä–æ–µ–∫—Ç—ã</span>
            </button>
          </nav>
          
          {/* Characters List */}
          {activeSection === 'characters' && (
            <div className="mt-4">
              {characters.length > 0 && (
                <>
                  <h3 className="text-sm font-semibold text-gray-300 mb-3">–ì–µ–π–º–ø–ª–µ–π–Ω—ã–π –ø–µ—Ä—Å–æ–Ω–∞–∂:</h3>
                  <div className="bg-gray-700 rounded-lg p-4 border border-gray-600">
                    {characters[0] && (
                      <>
                        <div className="flex items-center gap-3 mb-3">
                          <div className="w-12 h-12 bg-blue-600 rounded-lg flex items-center justify-center">
                            <span className="text-2xl">üéÆ</span>
                          </div>
                          <div className="flex-1">
                            <h4 className="text-white font-semibold">{characters[0].name || '–ë–µ–∑—ã–º—è–Ω–Ω—ã–π'}</h4>
                            <p className="text-gray-400 text-xs">–ì–ª–∞–≤–Ω—ã–π –≥–µ—Ä–æ–π –Ω–æ–≤–µ–ª–ª—ã</p>
                          </div>
                        </div>
                        <div className="space-y-2">
                          <div className="flex justify-between text-xs">
                            <span className="text-gray-400">–£—Ä–æ–≤–µ–Ω—å:</span>
                            <span className="text-white">{characters[0].level || 1}</span>
                          </div>
                          <div className="flex justify-between text-xs">
                            <span className="text-gray-400">–û—á–∫–∏ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫:</span>
                            <span className="text-white">{characters[0].stats ? Object.values(characters[0].stats).reduce((sum, stat) => sum + stat.value, 0) : 0}</span>
                          </div>
                        </div>
                        <div className="mt-3 pt-3 border-t border-gray-600 space-y-2">
                          <button
                            onClick={() => handleActionClick('create-character')}
                            className="w-full text-xs bg-blue-600 hover:bg-blue-500 text-white px-3 py-2 rounded-lg transition-colors"
                          >
                            ‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
                          </button>
                          <button
                            onClick={() => setShowDemoQuest(true)}
                            className="w-full text-xs bg-gradient-to-r from-purple-600 to-indigo-600 hover:from-purple-500 hover:to-indigo-500 text-white px-3 py-2 rounded-lg transition-all duration-200 shadow-md hover:shadow-lg"
                          >
                            üé≠ –î–µ–º–æ-–∫–≤–µ—Å—Ç
                          </button>
                        </div>
                      </>
                    )}
                  </div>
                </>
              )}
              {characters.length === 0 && (
                <div className="mt-4 text-center">
                  <div className="w-16 h-16 bg-gray-700 rounded-lg flex items-center justify-center mx-auto mb-3">
                    <span className="text-2xl">üéÆ</span>
                  </div>
                  <p className="text-xs text-gray-400 mb-3">–ì–µ–π–º–ø–ª–µ–π–Ω—ã–π –ø–µ—Ä—Å–æ–Ω–∞–∂ –Ω–µ —Å–æ–∑–¥–∞–Ω</p>
          <button
                    onClick={() => handleActionClick('create-character')}
                    className="text-xs bg-blue-600 hover:bg-blue-500 text-white px-4 py-2 rounded-lg transition-colors"
          >
                    –°–æ–∑–¥–∞—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
          </button>
                </div>
              )}
            </div>
          )}
        </div>

      {/* Main Content Area */}
        <div className="flex-1 p-8">
          <div className="max-w-6xl mx-auto">
            {/* Top Action Buttons Row */}
            <div className="mb-12">
              <div className="flex items-center justify-center gap-2 mb-8">
                <div className="w-2 h-2 bg-blue-500 rounded-full"></div>
                <p className="text-gray-300 text-lg">–ù–∞—á–Ω–∏—Ç–µ —Å –æ–¥–Ω–æ–≥–æ –∏–∑ —Å–ª–µ–¥—É—é—â–∏—Ö –¥–µ–π—Å—Ç–≤–∏–π:</p>
                <div className="w-2 h-2 bg-blue-500 rounded-full"></div>
              </div>
              
              {/* Horizontal Action Buttons */}
              <div className="flex flex-wrap justify-center gap-4 max-w-5xl mx-auto">
              <button
                onClick={() => handleActionClick('create-character')}
                className="action-button group bg-gray-800 hover:bg-gray-700 text-white p-4 rounded-xl transition-all duration-200 text-center border border-gray-600 hover:border-gray-500 hover:shadow-lg hover:-translate-y-1 relative min-w-[200px]"
              >
                <div className="flex flex-col items-center gap-3">
                  <div className="w-14 h-14 bg-blue-600 rounded-xl flex items-center justify-center group-hover:bg-blue-500 transition-colors shadow-lg">
                    <span className="text-2xl">üéÆ</span>
                  </div>
                  <div>
                    <h3 className="text-lg font-semibold mb-1">–ì–µ–π–º–ø–ª–µ–π–Ω—ã–π –ø–µ—Ä—Å–æ–Ω–∞–∂</h3>
                    <p className="text-gray-400 text-xs leading-tight">–°–æ–∑–¥–∞—Ç—å –≥–ª–∞–≤–Ω–æ–≥–æ –≥–µ—Ä–æ—è –Ω–æ–≤–µ–ª–ª—ã</p>
                  </div>
                </div>
              </button>

              <button
                onClick={() => handleActionClick('create-event')}
                className="action-button group bg-gray-800 hover:bg-gray-700 text-white p-4 rounded-xl transition-all duration-200 text-center border border-gray-600 hover:border-gray-500 hover:shadow-lg hover:-translate-y-1 relative min-w-[200px]"
              >
                <div className="flex flex-col items-center gap-3">
                  <div className="w-14 h-14 bg-green-600 rounded-xl flex items-center justify-center group-hover:bg-green-500 transition-colors shadow-lg">
                    <span className="text-2xl">‚ö°</span>
                  </div>
                  <div>
                    <h3 className="text-lg font-semibold mb-1">–°–æ–∑–¥–∞—Ç—å —Å–æ–±—ã—Ç–∏–µ</h3>
                    <p className="text-gray-400 text-xs leading-tight">–û—Ç–¥–µ–ª—å–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è –≤ –∏–≥—Ä–µ</p>
                  </div>
                </div>
              </button>

              <button
                onClick={() => handleActionClick('event-branch')}
                className="action-button group bg-gray-800 hover:bg-gray-700 text-white p-4 rounded-xl transition-all duration-200 text-center border border-gray-600 hover:border-gray-500 hover:shadow-lg hover:-translate-y-1 relative min-w-[200px]"
              >
                <div className="flex flex-col items-center gap-3">
                  <div className="w-14 h-14 bg-yellow-600 rounded-xl flex items-center justify-center group-hover:bg-yellow-500 transition-colors shadow-lg">
                    <span className="text-2xl">üìú</span>
                  </div>
                  <div>
                    <h3 className="text-lg font-semibold mb-1">–ö–≤–µ—Å—Ç—ã</h3>
                    <p className="text-gray-400 text-xs leading-tight">–°–æ–∑–¥–∞—Ç—å –∫–≤–µ—Å—Ç–æ–≤—ã–µ –≤–µ—Ç–∫–∏</p>
                  </div>
                </div>
              </button>

              <button
                onClick={() => handleActionClick('open-project')}
                className="action-button group bg-gray-800 hover:bg-gray-700 text-white p-4 rounded-xl transition-all duration-200 text-center border border-gray-600 hover:border-gray-500 hover:shadow-lg hover:-translate-y-1 relative min-w-[200px]"
              >
                <div className="flex flex-col items-center gap-3">
                  <div className="w-14 h-14 bg-indigo-600 rounded-xl flex items-center justify-center group-hover:bg-indigo-500 transition-colors shadow-lg">
                    <span className="text-2xl">üìÅ</span>
                  </div>
                  <div>
                    <h3 className="text-lg font-semibold mb-1">–û—Ç–∫—Ä—ã—Ç—å –ø—Ä–æ–µ–∫—Ç</h3>
                    <p className="text-gray-400 text-xs leading-tight">–°—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –ø—Ä–æ–µ–∫—Ç—ã</p>
                  </div>
                </div>
              </button>

              <button
                onClick={() => handleActionClick('game-setting')}
                className="action-button group bg-gray-800 hover:bg-gray-700 text-white p-4 rounded-xl transition-all duration-200 text-center border border-gray-600 hover:border-gray-500 hover:shadow-lg hover:-translate-y-1 relative min-w-[200px]"
              >
                <div className="flex flex-col items-center gap-3">
                  <div className="w-14 h-14 bg-purple-600 rounded-xl flex items-center justify-center group-hover:bg-purple-500 transition-colors shadow-lg">
                    <span className="text-2xl">‚öôÔ∏è</span>
                  </div>
                  <div>
                    <h3 className="text-lg font-semibold mb-1">–°–µ—Ç—Ç–∏–Ω–≥</h3>
                    <p className="text-gray-400 text-xs leading-tight">–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–≥—Ä—ã</p>
                  </div>
                </div>
              </button>

              <button
                onClick={() => handleActionClick('game-tone')}
                className="action-button group bg-gray-800 hover:bg-gray-700 text-white p-4 rounded-xl transition-all duration-200 text-center border border-gray-600 hover:border-gray-500 hover:shadow-lg hover:-translate-y-1 relative min-w-[200px]"
              >
                <div className="flex flex-col items-center gap-3">
                  <div className="w-14 h-14 bg-gradient-to-br from-pink-600 to-purple-600 rounded-xl flex items-center justify-center group-hover:from-pink-500 group-hover:to-purple-500 transition-all duration-200 shadow-lg">
                    <span className="text-2xl">üõ†Ô∏è</span>
                  </div>
                  <div>
                    <h3 className="text-lg font-semibold mb-1">–¢–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –∏–≥—Ä—ã</h3>
                    <p className="text-gray-400 text-xs leading-tight">–°—Ç–∏–ª—å –∏ –∞—Ç–º–æ—Å—Ñ–µ—Ä–∞</p>
                  </div>
                </div>
              </button>

              <button
                onClick={() => handleActionClick('manage-projects')}
                className="action-button group bg-gray-800 hover:bg-gray-700 text-white p-4 rounded-xl transition-all duration-200 text-center border border-gray-600 hover:border-gray-500 hover:shadow-lg hover:-translate-y-1 relative min-w-[200px]"
              >
                <div className="flex flex-col items-center gap-3">
                  <div className="w-14 h-14 bg-gradient-to-br from-orange-600 to-red-600 rounded-xl flex items-center justify-center group-hover:from-orange-500 group-hover:to-red-500 transition-all duration-200 shadow-lg">
                    <span className="text-2xl">üìÅ</span>
                  </div>
            <div>
                    <h3 className="text-lg font-semibold mb-1">–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞–º–∏</h3>
                    <p className="text-gray-400 text-xs leading-tight">–°–æ–∑–¥–∞–Ω–∏–µ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞</p>
                  </div>
                </div>
              </button>
              </div>
            </div>
            
            {/* Welcome Section */}
            <div className="text-center mt-16">
              <h1 className="text-5xl font-bold text-white mb-4">–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Nexus!</h1>
              <p className="text-gray-400 text-lg">–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã—Ö –Ω–æ–≤–µ–ª–ª</p>
              <div className="mt-6 text-sm text-gray-500">
                <p>–°–æ–∑–¥–∞–π—Ç–µ –≥–µ–π–º–ø–ª–µ–π–Ω–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞, —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–π—Ç–µ –∫–≤–µ—Å—Ç—ã –∏ —Å–æ–±—ã—Ç–∏—è</p>
              </div>
            </div>

            {/* Action Content */}
            {selectedAction && (
              <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
                <div className="bg-gray-800 rounded-xl border border-gray-600 shadow-2xl w-[900px] mx-auto max-h-[90vh] overflow-y-auto">
                  {selectedAction === 'create-character' ? (
                    <CharacterCreator 
                      onSave={(character) => {
                        console.log('Character saved:', character);
                        // –ó–∞–º–µ–Ω—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –∏–ª–∏ –¥–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–≥–æ (—Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω –ø–µ—Ä—Å–æ–Ω–∞–∂)
                        setCharacters([character]);
                        toast.success(`‚úÖ –ì–µ–π–º–ø–ª–µ–π–Ω—ã–π –ø–µ—Ä—Å–æ–Ω–∞–∂ "${character.name}" —Å–æ–∑–¥–∞–Ω!`);
                        handleClosePanel();
                      }}
                      onCancel={handleClosePanel}
                      compact={true}
                      onStatSelect={(stat, description, history, skills, icon, category, categoryName) => {
                        setSelectedCharacterStat({ 
                          stat, 
                          description, 
                          history, 
                          skills, 
                          icon, 
                          category, 
                          categoryName 
                        });
                      }}
                    />
                  ) : selectedAction === 'game-setting' ? (
                    <SettingPanel 
                      currentSetting={gameSetting}
                      onSettingChange={setGameSetting}
                      compact={true}
                      onClose={handleClosePanel}
                    />
                  ) : selectedAction === 'game-tone' ? (
                    <TonePanel 
                      currentTone={gameTone}
                      onToneChange={(tone) => {
                        setGameTone(tone);
                        // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –≤ –ø—Ä–æ–µ–∫—Ç–µ
                        if (currentProject) {
                          const updatedProject = { ...currentProject, gameTone: tone };
                          PM.saveProject(updatedProject);
                          setCurrentProject(updatedProject);
                        }
                        toast.success('‚úÖ –¢–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –∏–≥—Ä—ã –æ–±–Ω–æ–≤–ª–µ–Ω–∞!');
                      }}
                      compact={true}
                      onClose={handleClosePanel}
                    />
                  ) : selectedAction === 'manage-projects' ? (
                    <ProjectManager
                      currentProject={currentProject}
                      onProjectChange={(project) => {
                        setCurrentProject(project);
                        if (project) {
                          setGameTone(project.gameTone);
                          setGameSetting(project.gameSetting);
                        }
                      }}
                      onClose={handleClosePanel}
                    />
                  ) : (
                    <div className="p-6">
                      <div className="flex items-center justify-between mb-4">
                        <h2 className="text-2xl font-bold text-white">
                          {selectedAction === 'create-event' && '–°–æ–∑–¥–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è'}
                          {selectedAction === 'event-branch' && '–í–µ—Ç–∫–∞ —Å–æ–±—ã—Ç–∏–π'}
                          {selectedAction === 'open-project' && '–û—Ç–∫—Ä—ã—Ç–∏–µ –ø—Ä–æ–µ–∫—Ç–∞'}
                        </h2>
                <button
                          onClick={handleClosePanel}
                          className="text-gray-400 hover:text-white text-xl"
                        >
                          ‚úï
                </button>
                      </div>
                      
                      <div className="text-gray-300">
                        {selectedAction === 'create-event' && (
                          <p>–ó–¥–µ—Å—å –±—É–¥–µ—Ç —Ñ–æ—Ä–º–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å–æ–±—ã—Ç–∏—è —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ —Ç—Ä–∏–≥–≥–µ—Ä–æ–≤, —É—Å–ª–æ–≤–∏–π –∏ –ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏–π.</p>
                        )}
                        {selectedAction === 'event-branch' && (
                          <p>–ó–¥–µ—Å—å –±—É–¥–µ—Ç –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –≤–µ—Ç–æ–∫ —Å–æ–±—ã—Ç–∏–π —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é —Å–æ–∑–¥–∞–Ω–∏—è —Ä–∞–∑–≤–µ—Ç–≤–ª–µ–Ω–∏–π –∏ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã—Ö –ø—É—Ç–µ–π.</p>
                        )}
                        {selectedAction === 'open-project' && (
                          <p>–ó–¥–µ—Å—å –±—É–¥–µ—Ç —Å–ø–∏—Å–æ–∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤ –¥–ª—è –≤—ã–±–æ—Ä–∞ –∏ –æ—Ç–∫—Ä—ã—Ç–∏—è.</p>
                        )}
                      </div>
                    </div>
                  )}
                </div>
              </div>
            )}
          </div>
        </div>
      </div>

      {/* Messenger-style Context Panel - Bottom Right */}
      {selectedCharacterStat && (
          <div className="fixed bottom-6 right-6 w-96 h-[480px] bg-gray-800 rounded-2xl border border-gray-600 shadow-2xl z-50 flex flex-col overflow-hidden context-panel-static" style={{ position: 'fixed', bottom: '24px', right: '24px', width: '384px', height: '480px' }}>
            {/* Header */}
            <div className="bg-gray-700 px-4 py-3 rounded-t-2xl border-b border-gray-600 flex items-center justify-between flex-shrink-0">
              <div className="flex items-center gap-3">
                <div className="w-10 h-10 bg-gradient-to-br from-blue-500 to-blue-600 rounded-full flex items-center justify-center shadow-lg">
                  <span className="text-white text-xl">{selectedCharacterStat?.icon || 'üß†'}</span>
                </div>
                <div className="min-w-0 flex-1">
                  <h3 className="text-white font-semibold truncate">{selectedCharacterStat?.stat || '–°–ø—Ä–∞–≤–æ—á–Ω–∏–∫'}</h3>
                  <p className="text-gray-400 text-xs">–•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞</p>
                </div>
              </div>
              <button
                onClick={() => setSelectedCharacterStat(null)}
                className="w-8 h-8 bg-gray-600 hover:bg-gray-500 text-gray-300 hover:text-white rounded-full flex items-center justify-center transition-colors text-lg flex-shrink-0"
                title="–ó–∞–∫—Ä—ã—Ç—å"
              >
                √ó
              </button>
            </div>
            
            {/* Tab Navigation */}
            <div className="px-4 py-2 bg-gray-800 flex-shrink-0">
              <div className="flex gap-1 bg-gray-600 p-1 rounded-lg mb-2">
                <button
                  onClick={() => setActiveTab('description')}
                  className={`flex-1 px-2 py-2 text-xs rounded-md transition-all flex items-center justify-center gap-1 ${
                    activeTab === 'description' 
                      ? 'bg-blue-600 text-white shadow-md' 
                      : 'text-gray-300 hover:text-white hover:bg-gray-500'
                  }`}
                >
                  <span>üìñ</span>
                  <span>–û–ø–∏—Å–∞–Ω–∏–µ</span>
              </button>
              <button
                  onClick={() => setActiveTab('history')}
                  className={`flex-1 px-2 py-2 text-xs rounded-md transition-all flex items-center justify-center gap-1 ${
                    activeTab === 'history' 
                      ? 'bg-blue-600 text-white shadow-md' 
                      : 'text-gray-300 hover:text-white hover:bg-gray-500'
                  }`}
                >
                  <span>üìú</span>
                  <span>–ò—Å—Ç–æ—Ä–∏—è</span>
              </button>
                <button
                  onClick={() => setActiveTab('skills')}
                  className={`flex-1 px-2 py-2 text-xs rounded-md transition-all flex items-center justify-center gap-1 ${
                    activeTab === 'skills' 
                      ? 'bg-blue-600 text-white shadow-md' 
                      : 'text-gray-300 hover:text-white hover:bg-gray-500'
                  }`}
                >
                  <span>‚ö°</span>
                  <span>–ù–∞–≤—ã–∫–∏</span>
                </button>
              </div>
              
              {/* Generate Text Button */}
              <div className="flex justify-center">
                <button
                  onClick={handleGenerateText}
                  disabled={isGenerating}
                  className={`generate-button px-3 py-1.5 text-white text-xs rounded-lg flex items-center gap-1.5 transition-all duration-200 ${
                    isGenerating ? 'opacity-50 cursor-not-allowed' : 'hover:shadow-lg'
                  }`}
                >
                  {isGenerating ? (
                    <>
                      <span className="animate-spin">‚è≥</span>
                      <span>–ì–µ–Ω–µ—Ä–∞—Ü–∏—è...</span>
                    </>
                  ) : (
                    <>
                      <span>‚úçÔ∏è</span>
                      <span>–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—Å—Ç</span>
                    </>
                  )}
                </button>
          </div>
        </div>

            {/* Content Area - Fixed Height */}
            <div className="overflow-y-auto p-4 custom-scrollbar context-panel-content" style={{ height: '320px', maxHeight: '320px' }}>
              {selectedCharacterStat ? (
                <div className="space-y-3">
                  {/* Category Badge */}
                  <div className="flex justify-center">
                    <span className={`px-4 py-2 text-sm rounded-full font-medium ${
                      selectedCharacterStat.category === 'intellect' ? 'bg-blue-600/20 text-blue-300 border border-blue-500/30' :
                      selectedCharacterStat.category === 'psyche' ? 'bg-purple-600/20 text-purple-300 border border-purple-500/30' :
                      selectedCharacterStat.category === 'physique' ? 'bg-red-600/20 text-red-300 border border-red-500/30' :
                      'bg-green-600/20 text-green-300 border border-green-500/30'
                    }`}>
                      {selectedCharacterStat.categoryName || '–•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞'}
                    </span>
                  </div>

                  {/* Tab Content */}
                  <div className="bg-gray-700 rounded-lg p-3 max-w-full overflow-hidden">
                    {activeTab === 'description' && (
                      <div className="w-full overflow-hidden">
                        <p className="text-gray-100 text-sm context-panel-text max-w-full">
                          {selectedCharacterStat.description}
                        </p>
                    </div>
                    )}
                  
                    {activeTab === 'history' && (
                      <div className="w-full overflow-hidden">
                        <p className="text-gray-100 text-sm italic context-panel-text max-w-full">
                          {selectedCharacterStat.history}
                        </p>
                    </div>
                    )}
                  
                    {activeTab === 'skills' && (
                      <div className="w-full overflow-hidden">
                        <div className="space-y-3">
                          <h4 className="text-white font-semibold text-sm mb-3 flex items-center gap-2">
                            <span className="text-yellow-400">‚ö°</span>
                            –ù–∞–≤—ã–∫–∏ –∏ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏
                          </h4>
                          <div className="grid grid-cols-1 gap-2">
                            {selectedCharacterStat.skills.map((skill, index) => (
                              <div 
                                key={index}
                                className="skill-card group relative bg-gradient-to-r from-blue-600/20 to-purple-600/20 border border-blue-500/30 rounded-lg p-3 hover:from-blue-600/30 hover:to-purple-600/30 hover:border-blue-400/50 cursor-pointer"
                                title={`–ù–∞–∂–º–∏—Ç–µ –¥–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–µ–π –æ –Ω–∞–≤—ã–∫–µ "${skill}"`}
                              >
                                <div className="flex items-center gap-2">
                                  <div className="skill-number w-6 h-6 rounded-full flex items-center justify-center text-white text-xs font-bold">
                                    {index + 1}
                                  </div>
                                  <span className="text-white text-sm font-medium group-hover:text-blue-200 transition-colors">
                                    {skill}
                                  </span>
                                  <div className="ml-auto opacity-0 group-hover:opacity-100 transition-opacity">
                                    <span className="text-xs text-blue-300">‚ÑπÔ∏è</span>
                                  </div>
                                </div>
                                
                                {/* Hover tooltip */}
                                <div className="skill-tooltip absolute bottom-full left-0 mb-2 w-64 bg-gray-900/95 border border-gray-600 rounded-lg p-3 shadow-xl opacity-0 group-hover:opacity-100 transition-opacity duration-200 pointer-events-none z-10">
                                  <div className="text-xs text-gray-300">
                                    <div className="font-semibold text-white mb-1">{skill}</div>
                                    <div className="text-gray-400">
                                      {/* –õ–æ–≥–∏–∫–∞ */}
                                      {selectedCharacterStat.stat === '–õ–æ–≥–∏–∫–∞' && skill === '–¥–µ–¥—É–∫—Ü–∏—è' && '–ü–æ–∑–≤–æ–ª—è–µ—Ç –¥–µ–ª–∞—Ç—å –ª–æ–≥–∏—á–µ—Å–∫–∏–µ –≤—ã–≤–æ–¥—ã –∏–∑ –∏–º–µ—é—â–∏—Ö—Å—è —Ñ–∞–∫—Ç–æ–≤ –∏ —É–ª–∏–∫. –ü–æ–º–æ–≥–∞–µ—Ç —Å–≤—è–∑–∞—Ç—å —Ä–∞–∑—Ä–æ–∑–Ω–µ–Ω–Ω—ã–µ –¥–µ—Ç–∞–ª–∏ –≤ –µ–¥–∏–Ω—É—é –∫–∞—Ä—Ç–∏–Ω—É.'}
                                      {selectedCharacterStat.stat === '–õ–æ–≥–∏–∫–∞' && skill === '–ª–æ–≥–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑' && '–°–∏—Å—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –¥–ª—è –≤—ã—è–≤–ª–µ–Ω–∏—è –∑–∞–∫–æ–Ω–æ–º–µ—Ä–Ω–æ—Å—Ç–µ–π –∏ —Å–∫—Ä—ã—Ç—ã—Ö —Å–≤—è–∑–µ–π.'}
                                      {selectedCharacterStat.stat === '–õ–æ–≥–∏–∫–∞' && skill === '—Ä–∞–∑–æ–±–ª–∞—á–µ–Ω–∏–µ –ª–∂–∏' && '–í—ã—è–≤–ª–µ–Ω–∏–µ –Ω–µ—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–π –≤ —Ä–∞—Å—Å–∫–∞–∑–∞—Ö –∏ –≤—ã—Å–∫–∞–∑—ã–≤–∞–Ω–∏—è—Ö —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–æ–≤.'}
                                      {selectedCharacterStat.stat === '–õ–æ–≥–∏–∫–∞' && skill === '–æ–ø—Ä–æ–≤–µ—Ä–∂–µ–Ω–∏–µ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤' && '–ü–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ –∫–æ–Ω—Ç—Ä–∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∏ –≤—ã—è–≤–ª–µ–Ω–∏–µ —Å–ª–∞–±—ã—Ö –º–µ—Å—Ç –≤ –ª–æ–≥–∏–∫–µ –æ–ø–ø–æ–Ω–µ–Ω—Ç–∞.'}
                                      
                                      {/* –†–∏—Ç–æ—Ä–∏–∫–∞ */}
                                      {selectedCharacterStat.stat === '–†–∏—Ç–æ—Ä–∏–∫–∞' && skill === '–æ—Ä–∞—Ç–æ—Ä—Å—Ç–≤–æ' && '–£–±–µ–¥–∏—Ç–µ–ª—å–Ω–∞—è —Ä–µ—á—å –ø–µ—Ä–µ–¥ –∞—É–¥–∏—Ç–æ—Ä–∏–µ–π –∏ –ø—É–±–ª–∏—á–Ω—ã–µ –≤—ã—Å—Ç—É–ø–ª–µ–Ω–∏—è. –í–ª–∏—è–Ω–∏–µ –Ω–∞ –º–∞—Å—Å—ã —á–µ—Ä–µ–∑ –∫—Ä–∞—Å–Ω–æ—Ä–µ—á–∏–µ.'}
                                      {selectedCharacterStat.stat === '–†–∏—Ç–æ—Ä–∏–∫–∞' && skill === '–º–∞–Ω–∏–ø—É–ª—è—Ü–∏—è' && '–í–ª–∏—è–Ω–∏–µ –Ω–∞ —ç–º–æ—Ü–∏–∏ –∏ —Ä–µ—à–µ–Ω–∏—è –¥—Ä—É–≥–∏—Ö –ª—é–¥–µ–π —á–µ—Ä–µ–∑ —Å–ª–æ–≤–∞ –∏ –∏–Ω—Ç–æ–Ω–∞—Ü–∏–∏.'}
                                      {selectedCharacterStat.stat === '–†–∏—Ç–æ—Ä–∏–∫–∞' && skill === '—É–±–µ–∂–¥–µ–Ω–∏–µ' && '–°–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å –∏–∑–º–µ–Ω—è—Ç—å –º–Ω–µ–Ω–∏—è –∏ –∑–∞—Å—Ç–∞–≤–ª—è—Ç—å —Å–æ–≥–ª–∞—à–∞—Ç—å—Å—è —Å –≤–∞—à–µ–π —Ç–æ—á–∫–æ–π –∑—Ä–µ–Ω–∏—è.'}
                                      {selectedCharacterStat.stat === '–†–∏—Ç–æ—Ä–∏–∫–∞' && skill === '–≤–µ–¥–µ–Ω–∏–µ –ø–µ—Ä–µ–≥–æ–≤–æ—Ä–æ–≤' && '–î–æ—Å—Ç–∏–∂–µ–Ω–∏–µ –∫–æ–º–ø—Ä–æ–º–∏—Å—Å–æ–≤ –∏ –≤—ã–≥–æ–¥–Ω—ã—Ö —Å–æ–≥–ª–∞—à–µ–Ω–∏–π –≤ —Å–ª–æ–∂–Ω—ã—Ö —Å–∏—Ç—É–∞—Ü–∏—è—Ö.'}
                                      
                                      {/* –ê–Ω–∞–ª–∏–∑ */}
                                      {selectedCharacterStat.stat === '–ê–Ω–∞–ª–∏–∑' && skill === '—Å—Ç—Ä–∞—Ç–µ–≥–∏—á–µ—Å–∫–æ–µ –º—ã—à–ª–µ–Ω–∏–µ' && '–ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–æ–ª–≥–æ—Å—Ä–æ—á–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π –∏ –ø—Ä–µ–¥–≤–∏–¥–µ–Ω–∏–µ –ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏–π —Ä–µ—à–µ–Ω–∏–π.'}
                                      {selectedCharacterStat.stat === '–ê–Ω–∞–ª–∏–∑' && skill === '–∞–Ω–∞–ª–∏–∑ —Å–∏—Ç—É–∞—Ü–∏–∏' && '–ë—ã—Å—Ç—Ä–∞—è –æ—Ü–µ–Ω–∫–∞ –æ–±—Å—Ç–∞–Ω–æ–≤–∫–∏ –∏ –≤—ã—è–≤–ª–µ–Ω–∏–µ –∫–ª—é—á–µ–≤—ã—Ö —Ñ–∞–∫—Ç–æ—Ä–æ–≤ –≤–ª–∏—è–Ω–∏—è.'}
                                      {selectedCharacterStat.stat === '–ê–Ω–∞–ª–∏–∑' && skill === '–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ' && '–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –ø–æ—à–∞–≥–æ–≤—ã—Ö –ø–ª–∞–Ω–æ–≤ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Ü–µ–ª–µ–π —Å —É—á—ë—Ç–æ–º —Ä–∏—Å–∫–æ–≤.'}
                                      
                                      {/* –≠–º–ø–∞—Ç–∏—è */}
                                      {selectedCharacterStat.stat === '–≠–º–ø–∞—Ç–∏—è' && skill === '—á—Ç–µ–Ω–∏–µ —ç–º–æ—Ü–∏–π' && '–ü–æ–Ω–∏–º–∞–Ω–∏–µ –∏—Å—Ç–∏–Ω–Ω—ã—Ö —á—É–≤—Å—Ç–≤ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞ –ø–æ –º–∏–º–∏–∫–µ, –∂–µ—Å—Ç–∞–º –∏ –≥–æ–ª–æ—Å—É.'}
                                      {selectedCharacterStat.stat === '–≠–º–ø–∞—Ç–∏—è' && skill === '–Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –Ω–∞ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞' && '–ê–¥–∞–ø—Ç–∞—Ü–∏—è —Å–≤–æ–µ–≥–æ –ø–æ–≤–µ–¥–µ–Ω–∏—è –ø–æ–¥ —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥—Ä—É–≥–∏—Ö.'}
                                      {selectedCharacterStat.stat === '–≠–º–ø–∞—Ç–∏—è' && skill === '–ø–æ–¥–¥–µ—Ä–∂–∫–∞' && '–û–∫–∞–∑–∞–Ω–∏–µ —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –∏ —Å–æ–∑–¥–∞–Ω–∏–µ –¥–æ–≤–µ—Ä–∏—Ç–µ–ª—å–Ω–æ–π –∞—Ç–º–æ—Å—Ñ–µ—Ä—ã.'}
                                      {selectedCharacterStat.stat === '–≠–º–ø–∞—Ç–∏—è' && skill === '–∏—Å–∫—Ä–µ–Ω–Ω–æ—Å—Ç—å' && '–°–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å –±—ã—Ç—å –∏—Å–∫—Ä–µ–Ω–Ω–∏–º –∏ –≤—ã–∑—ã–≤–∞—Ç—å –∏—Å–∫—Ä–µ–Ω–Ω–æ—Å—Ç—å —É –¥—Ä—É–≥–∏—Ö.'}
                                      
                                      {/* –í–æ–ª—è */}
                                      {selectedCharacterStat.stat === '–í–æ–ª—è' && skill === '—Å–æ–ø—Ä–æ—Ç–∏–≤–ª–µ–Ω–∏–µ —Å—Ç—Ä–µ—Å—Å—É' && '–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —è—Å–Ω–æ—Å—Ç–∏ –º—ã—à–ª–µ–Ω–∏—è –≤ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –∏ —Å—Ç—Ä–µ—Å—Å–æ–≤—ã—Ö —Å–∏—Ç—É–∞—Ü–∏—è—Ö.'}
                                      {selectedCharacterStat.stat === '–í–æ–ª—è' && skill === '–º–æ—Ä–∞–ª—å–Ω–∞—è —Å—Ç–æ–π–∫–æ—Å—Ç—å' && '–£–º–µ–Ω–∏–µ –ø—Ä–∏–¥–µ—Ä–∂–∏–≤–∞—Ç—å—Å—è —Å–≤–æ–∏—Ö –ø—Ä–∏–Ω—Ü–∏–ø–æ–≤ –ø–æ–¥ –¥–∞–≤–ª–µ–Ω–∏–µ–º –æ–±—Å—Ç–æ—è—Ç–µ–ª—å—Å—Ç–≤.'}
                                      {selectedCharacterStat.stat === '–í–æ–ª—è' && skill === '–∫–æ–Ω—Ç—Ä–æ–ª—å —Å–µ–±—è –≤ –∫—Ä–∏—Ç–∏–∫–µ' && '–°–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å –Ω–µ –ø–æ–¥–¥–∞–≤–∞—Ç—å—Å—è –Ω–∞ –ø—Ä–æ–≤–æ–∫–∞—Ü–∏–∏ –∏ —Å–æ—Ö—Ä–∞–Ω—è—Ç—å —Å–∞–º–æ–æ–±–ª–∞–¥–∞–Ω–∏–µ.'}
                                      
                                      {/* –ò–Ω—Ç—É–∏—Ü–∏—è */}
                                      {selectedCharacterStat.stat === '–ò–Ω—Ç—É–∏—Ü–∏—è' && skill === '–ø—Ä–µ–¥—á—É–≤—Å—Ç–≤–∏–µ' && '–í–Ω—É—Ç—Ä–µ–Ω–Ω–µ–µ —á—É–≤—Å—Ç–≤–æ, –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–∞—é—â–µ–µ –æ–± –æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∏–ª–∏ –≤–∞–∂–Ω—ã—Ö —Å–æ–±—ã—Ç–∏—è—Ö.'}
                                      {selectedCharacterStat.stat === '–ò–Ω—Ç—É–∏—Ü–∏—è' && skill === '—à–µ—Å—Ç–æ–µ —á—É–≤—Å—Ç–≤–æ' && '–°–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å —É–ª–∞–≤–ª–∏–≤–∞—Ç—å —Å–∫—Ä—ã—Ç—ã–µ —Å–≤—è–∑–∏ –∏ –ø–æ–¥—Ç–µ–∫—Å—Ç—ã —Å–∏—Ç—É–∞—Ü–∏–∏.'}
                                      {selectedCharacterStat.stat === '–ò–Ω—Ç—É–∏—Ü–∏—è' && skill === '–ø—Ä–∏–Ω—è—Ç–∏–µ —Ä–µ—à–µ–Ω–∏–π –±–µ–∑ —Ñ–∞–∫—Ç–æ–≤' && '–í—ã–±–æ—Ä –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –ø—É—Ç–∏, –æ—Å–Ω–æ–≤—ã–≤–∞—è—Å—å –Ω–∞ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–º —á—É—Ç—å–µ.'}
                                      
                                      {/* –í—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç—å */}
                                      {selectedCharacterStat.stat === '–í—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç—å' && skill === '—Ñ–∏–∑–∏—á–µ—Å–∫–∞—è –∂–∏–≤—É—á–µ—Å—Ç—å' && '–°–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å –ø–µ—Ä–µ–Ω–æ—Å–∏—Ç—å —Ñ–∏–∑–∏—á–µ—Å–∫–∏–µ –Ω–∞–≥—Ä—É–∑–∫–∏ –∏ –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–∏—è.'}
                                      {selectedCharacterStat.stat === '–í—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç—å' && skill === '—Å–æ–ø—Ä–æ—Ç–∏–≤–ª–µ–Ω–∏–µ —É—Ä–æ–Ω—É' && '–£–º–µ–Ω—å—à–µ–Ω–∏–µ –ø–æ–ª—É—á–∞–µ–º–æ–≥–æ —Ñ–∏–∑–∏—á–µ—Å–∫–æ–≥–æ –∏ –ø—Å–∏—Ö–∏—á–µ—Å–∫–æ–≥–æ —É—â–µ—Ä–±–∞.'}
                                      {selectedCharacterStat.stat === '–í—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç—å' && skill === '–¥–ª–∏—Ç–µ–ª—å–Ω–æ–µ –Ω–∞–ø—Ä—è–∂–µ–Ω–∏–µ' && '–†–∞–±–æ—Ç–∞ –≤ —É—Å–ª–æ–≤–∏—è—Ö –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–≥–æ —Å—Ç—Ä–µ—Å—Å–∞ –±–µ–∑ –ø–æ—Ç–µ—Ä–∏ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏.'}
                                      
                                      {/* –ú—É—Ä–∞—à–∫–∏ */}
                                      {selectedCharacterStat.stat === '–ú—É—Ä–∞—à–∫–∏' && skill === '–æ—â—É—â–µ–Ω–∏–µ –Ω–∞–¥–≤–∏–≥–∞—é—â–µ–π—Å—è –æ–ø–∞—Å–Ω–æ—Å—Ç–∏' && '–§–∏–∑–∏—á–µ—Å–∫–æ–µ –ø—Ä–µ–¥—á—É–≤—Å—Ç–≤–∏–µ —É–≥—Ä–æ–∑—ã —á–µ—Ä–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –æ–∫—Ä—É–∂–∞—é—â–µ–π —Å—Ä–µ–¥–µ.'}
                                      {selectedCharacterStat.stat === '–ú—É—Ä–∞—à–∫–∏' && skill === '–≤–æ—Å–ø—Ä–∏—è—Ç–∏–µ –∞—Ç–º–æ—Å—Ñ–µ—Ä—ã' && '–ß—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∫ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—é –∏ —ç–Ω–µ—Ä–≥–µ—Ç–∏–∫–µ –º–µ—Å—Ç–∞.'}
                                      {selectedCharacterStat.stat === '–ú—É—Ä–∞—à–∫–∏' && skill === '—Å—Ç—Ä–∞—Ö' && '–£—Å–∏–ª–µ–Ω–Ω–æ–µ –≤–æ—Å–ø—Ä–∏—è—Ç–∏–µ —Å—Ç—Ä–∞—Ö–∞ –∫–∞–∫ –∑–∞—â–∏—Ç–Ω—ã–π –º–µ—Ö–∞–Ω–∏–∑–º.'}
                                      
                                      {/* –ò–º–ø—É–ª—å—Å */}
                                      {selectedCharacterStat.stat === '–ò–º–ø—É–ª—å—Å' && skill === '–∞–≥—Ä–µ—Å—Å–∏—è' && '–°–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å –∫ –±—ã—Å—Ç—Ä—ã–º –∞–≥—Ä–µ—Å—Å–∏–≤–Ω—ã–º –¥–µ–π—Å—Ç–≤–∏—è–º –≤ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–Ω—ã—Ö —Å–∏—Ç—É–∞—Ü–∏—è—Ö.'}
                                      {selectedCharacterStat.stat === '–ò–º–ø—É–ª—å—Å' && skill === '—Å–ø–æ–Ω—Ç–∞–Ω–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è' && '–ü—Ä–∏–Ω—è—Ç–∏–µ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã—Ö —Ä–µ—à–µ–Ω–∏–π –≤ —É—Å–ª–æ–≤–∏—è—Ö –Ω–µ—Ö–≤–∞—Ç–∫–∏ –≤—Ä–µ–º–µ–Ω–∏.'}
                                      {selectedCharacterStat.stat === '–ò–º–ø—É–ª—å—Å' && skill === '–∞—Ç–∞–∫–∞ –ø–µ—Ä–≤—ã–º' && '–ò–Ω–∏—Ü–∏–∞—Ç–∏–≤–Ω–æ—Å—Ç—å –≤ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–∞—Ö –∏ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å –¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å –ø–µ—Ä–≤—ã–º.'}
                                      
                                      {/* –í–æ—Å–ø—Ä–∏—è—Ç–∏–µ */}
                                      {selectedCharacterStat.stat === '–í–æ—Å–ø—Ä–∏—è—Ç–∏–µ' && skill === '–≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å' && '–°–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å –∑–∞–º–µ—á–∞—Ç—å –º–µ–ª–∫–∏–µ –¥–µ—Ç–∞–ª–∏ –∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –æ–∫—Ä—É–∂–µ–Ω–∏–∏.'}
                                      {selectedCharacterStat.stat === '–í–æ—Å–ø—Ä–∏—è—Ç–∏–µ' && skill === '–æ—Å—Ç—Ä–æ—Ç–∞ —á—É–≤—Å—Ç–≤' && '–£—Å–∏–ª–µ–Ω–Ω–æ–µ –∑—Ä–µ–Ω–∏–µ, —Å–ª—É—Ö –∏ –æ–±–æ–Ω—è–Ω–∏–µ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.'}
                                      {selectedCharacterStat.stat === '–í–æ—Å–ø—Ä–∏—è—Ç–∏–µ' && skill === '–¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—è' && '–°–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å –∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –º–µ–ª–∫–∏–µ –¥–µ—Ç–∞–ª–∏ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≤–∞–∂–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.'}
                                      
                                      {/* –õ–æ–≤–∫–æ—Å—Ç—å */}
                                      {selectedCharacterStat.stat === '–õ–æ–≤–∫–æ—Å—Ç—å' && skill === '–∞–∫—Ä–æ–±–∞—Ç–∏–∫–∞' && '–°–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å –∫ —Å–ª–æ–∂–Ω—ã–º —Ñ–∏–∑–∏—á–µ—Å–∫–∏–º –¥–≤–∏–∂–µ–Ω–∏—è–º –∏ –º–∞–Ω—ë–≤—Ä–∞–º.'}
                                      {selectedCharacterStat.stat === '–õ–æ–≤–∫–æ—Å—Ç—å' && skill === '—É—Ö–æ–¥ –æ—Ç –∞—Ç–∞–∫' && '–£–∫–ª–æ–Ω–µ–Ω–∏–µ –æ—Ç —Ñ–∏–∑–∏—á–µ—Å–∫–∏—Ö –∞—Ç–∞–∫ –∏ –æ–ø–∞—Å–Ω—ã—Ö —Å–∏—Ç—É–∞—Ü–∏–π.'}
                                      {selectedCharacterStat.stat === '–õ–æ–≤–∫–æ—Å—Ç—å' && skill === '–ª–æ–≤–ª—è –ø—Ä–µ–¥–º–µ—Ç–æ–≤' && '–¢–æ—á–Ω–∞—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ü–∏—è –¥–≤–∏–∂–µ–Ω–∏–π –¥–ª—è –º–∞–Ω–∏–ø—É–ª—è—Ü–∏–π —Å –æ–±—ä–µ–∫—Ç–∞–º–∏.'}
                                      {selectedCharacterStat.stat === '–õ–æ–≤–∫–æ—Å—Ç—å' && skill === '–∫—Ä–∞–∂–∞' && '–°–∫—Ä—ã—Ç—ã–µ –º–∞–Ω—ë–≤—Ä—ã –∏ –¥–µ–π—Å—Ç–≤–∏—è –±–µ–∑ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏—è.'}
                                      
                                      {/* –°–∞–º–æ–æ–±–ª–∞–¥–∞–Ω–∏–µ */}
                                      {selectedCharacterStat.stat === '–°–∞–º–æ–æ–±–ª–∞–¥–∞–Ω–∏–µ' && skill === '—ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è –º–∞—Å–∫–∞' && '–ö–æ–Ω—Ç—Ä–æ–ª—å –≤–Ω–µ—à–Ω–µ–≥–æ –≤—ã—Ä–∞–∂–µ–Ω–∏—è —ç–º–æ—Ü–∏–π –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è.'}
                                      {selectedCharacterStat.stat === '–°–∞–º–æ–æ–±–ª–∞–¥–∞–Ω–∏–µ' && skill === '–ø–æ–¥–∞–≤–ª–µ–Ω–∏–µ —Ä–µ–∞–∫—Ü–∏–∏' && '–°–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å —Ä–µ–∞–∫—Ü–∏—é –Ω–∞ –ø—Ä–æ–≤–æ–∫–∞—Ü–∏–∏ –∏ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æ—Å—Ç–∏.'}
                                      {selectedCharacterStat.stat === '–°–∞–º–æ–æ–±–ª–∞–¥–∞–Ω–∏–µ' && skill === '–≤–Ω–µ—à–Ω—è—è —Å—Ç–æ–π–∫–æ—Å—Ç—å' && '–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å–ø–æ–∫–æ–π–Ω–æ–≥–æ –∏ —É–≤–µ—Ä–µ–Ω–Ω–æ–≥–æ –≤–Ω–µ—à–Ω–µ–≥–æ –≤–∏–¥–∞ –≤ –ª—é–±—ã—Ö —Å–∏—Ç—É–∞—Ü–∏—è—Ö.'}
                                      
                                      {/* Fallback –¥–ª—è –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –Ω–∞–≤—ã–∫–æ–≤ */}
                                      {!['–õ–æ–≥–∏–∫–∞', '–†–∏—Ç–æ—Ä–∏–∫–∞', '–ê–Ω–∞–ª–∏–∑', '–≠–º–ø–∞—Ç–∏—è', '–í–æ–ª—è', '–ò–Ω—Ç—É–∏—Ü–∏—è', '–í—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç—å', '–ú—É—Ä–∞—à–∫–∏', '–ò–º–ø—É–ª—å—Å', '–í–æ—Å–ø—Ä–∏—è—Ç–∏–µ', '–õ–æ–≤–∫–æ—Å—Ç—å', '–°–∞–º–æ–æ–±–ª–∞–¥–∞–Ω–∏–µ'].includes(selectedCharacterStat.stat) && '–ù–∞–≤—ã–∫, —Ä–∞–∑–≤–∏–≤–∞–µ–º—ã–π —á–µ—Ä–µ–∑ –¥–∞–Ω–Ω—É—é —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫—É.'}
                                    </div>
                                  </div>
                                  {/* Arrow */}
                                  <div className="absolute top-full left-4 w-0 h-0 border-l-4 border-r-4 border-t-4 border-transparent border-t-gray-900"></div>
                                </div>
                              </div>
                            ))}
                          </div>
                          
                          {/* Character stat bonus info */}
                          <div className="mt-4 pt-3 border-t border-gray-600">
                            <div className="text-xs text-gray-400">
                              <div className="flex items-center gap-2 mb-1">
                                <span className="text-yellow-400">üí°</span>
                                <span className="font-medium">–ë–æ–Ω—É—Å —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏:</span>
                              </div>
                              <div className="text-gray-300">
                                –í—ã—Å–æ–∫–∏–π —É—Ä–æ–≤–µ–Ω—å <span className="text-blue-300 font-medium">{selectedCharacterStat.stat}</span> —É–ª—É—á—à–∞–µ—Ç —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –≤—Å–µ—Ö —Å–≤—è–∑–∞–Ω–Ω—ã—Ö –Ω–∞–≤—ã–∫–æ–≤ –∏ –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç –Ω–æ–≤—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –≤ –¥–∏–∞–ª–æ–≥–∞—Ö –∏ —Å–∏—Ç—É–∞—Ü–∏—è—Ö.
                    </div>
                    </div>
                  </div>
                </div>
              </div>
            )}
          </div>
                </div>
              ) : (
                <div className="text-center py-8">
                  <div className="text-4xl mb-3">üéØ</div>
                  <h4 className="text-white font-semibold mb-2">–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!</h4>
                  <p className="text-gray-400 text-sm leading-relaxed">
                    –í—ã–±–µ—Ä–∏—Ç–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫—É –≤ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–µ–π.
                  </p>
              </div>
            )}
          </div>
        </div>
        )}

        {/* Demo Quest */}
        {showDemoQuest && (
          <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
            <DemoQuest
              character={characters[0] || {
                name: '–î–µ–º–æ –ü–µ—Ä—Å–æ–Ω–∞–∂',
                level: 1,
                stats: {
                  intellect: { name: '–ò–Ω—Ç–µ–ª–ª–µ–∫—Ç', value: 4 },
                  psyche: { name: '–ü—Å–∏—Ö–∏–∫–∞', value: 4 },
                  physique: { name: '–§–∏–∑–∏–∫–∞', value: 4 },
                  motorics: { name: '–ú–æ—Ç–æ—Ä–∏–∫–∞', value: 4 }
                },
                skills: {
                  logic: { name: '–õ–æ–≥–∏–∫–∞', value: 2 },
                  encyclopedia: { name: '–≠–Ω—Ü–∏–∫–ª–æ–ø–µ–¥–∏—è', value: 2 },
                  rhetoric: { name: '–†–∏—Ç–æ—Ä–∏–∫–∞', value: 2 },
                  drama: { name: '–î—Ä–∞–º–∞', value: 2 },
                  conceptualization: { name: '–ö–æ–Ω—Ü–µ–ø—Ç—É–∞–ª–∏–∑–∞—Ü–∏—è', value: 2 },
                  visual_calculus: { name: '–í–∏–∑—É–∞–ª—å–Ω–æ–µ –∏—Å—á–∏—Å–ª–µ–Ω–∏–µ', value: 2 },
                  volition: { name: '–í–æ–ª—è', value: 2 },
                  inland_empire: { name: '–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –∏–º–ø–µ—Ä–∏—è', value: 2 },
                  empathy: { name: '–≠–º–ø–∞—Ç–∏—è', value: 2 },
                  authority: { name: '–ê–≤—Ç–æ—Ä–∏—Ç–µ—Ç', value: 2 },
                  suggestion: { name: '–í–Ω—É—à–µ–Ω–∏–µ', value: 2 },
                  espirit_de_corps: { name: '–î—É—Ö –∫–æ—Ä–ø—É—Å–∞', value: 2 },
                  endurance: { name: '–í—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç—å', value: 2 },
                  pain_threshold: { name: '–ü–æ—Ä–æ–≥ –±–æ–ª–∏', value: 2 },
                  physical_instrument: { name: '–§–∏–∑–∏—á–µ—Å–∫–∏–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç', value: 2 },
                  electrochemistry: { name: '–≠–ª–µ–∫—Ç—Ä–æ—Ö–∏–º–∏—è', value: 2 },
                  shivers: { name: '–î—Ä–æ–∂—å', value: 2 },
                  half_light: { name: '–ü–æ–ª—É—Å–≤–µ—Ç', value: 2 },
                  hand_eye_coordination: { name: '–ö–æ–æ—Ä–¥–∏–Ω–∞—Ü–∏—è —Ä—É–∫ –∏ –≥–ª–∞–∑', value: 2 },
                  perception: { name: '–í–æ—Å–ø—Ä–∏—è—Ç–∏–µ', value: 2 },
                  reaction_speed: { name: '–°–∫–æ—Ä–æ—Å—Ç—å —Ä–µ–∞–∫—Ü–∏–∏', value: 2 },
                  savoir_faire: { name: '–°–∞–º–æ–æ–±–ª–∞–¥–∞–Ω–∏–µ', value: 2 },
                  interfacing: { name: '–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å', value: 2 },
                  composure: { name: '–°–ø–æ–∫–æ–π—Å—Ç–≤–∏–µ', value: 2 }
                }
              }}
              onClose={() => setShowDemoQuest(false)}
            />
          </div>
        )}
        
        {/* Toast Container */}
        <ToastContainer />
    </div>
  );
}