import { useState, useEffect } from 'react';
import { runAllPerformanceTests, PerformanceTestResult } from '../../utils/performanceTest';
import PerformanceMonitor from '../ui/PerformanceMonitor';

export default function PerformanceTestPage() {
  const [isRunning, setIsRunning] = useState(false);
  const [results, setResults] = useState<PerformanceTestResult[]>([]);
  const [showMonitor, setShowMonitor] = useState(true);

  const runTests = async () => {
    setIsRunning(true);
    setResults([]);
    
    try {
      const testResults = await runAllPerformanceTests();
      setResults(testResults);
    } catch (error) {
      console.error('Tests failed:', error);
    } finally {
      setIsRunning(false);
    }
  };

  const getStatusColor = (success: boolean) => {
    return success ? 'text-green-400' : 'text-red-400';
  };

  const getStatusIcon = (success: boolean) => {
    return success ? '‚úÖ' : '‚ùå';
  };

  return (
    <div className="min-h-screen bg-gray-900 text-white p-8">
      {/* Performance Monitor */}
      <PerformanceMonitor enabled={showMonitor} showStats={showMonitor} />
      
      <div className="max-w-4xl mx-auto">
        <div className="mb-8">
          <h1 className="text-3xl font-bold mb-4">üöÄ Nexus Adventure Performance Tests</h1>
          <p className="text-gray-400 mb-6">
            –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –Ω–æ–≤–æ–≥–æ Discord-—Å—Ç–∏–ª—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
          </p>
          
          <div className="flex gap-4 mb-6">
            <button
              onClick={runTests}
              disabled={isRunning}
              className={`
                px-6 py-3 rounded-lg font-semibold transition-all duration-200
                ${isRunning 
                  ? 'bg-gray-600 text-gray-400 cursor-not-allowed' 
                  : 'bg-blue-600 hover:bg-blue-700 text-white hover:scale-105'
                }
              `}
            >
              {isRunning ? 'üîÑ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤...' : '‚ñ∂Ô∏è –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç—ã'}
            </button>
            
            <button
              onClick={() => setShowMonitor(!showMonitor)}
              className={`
                px-6 py-3 rounded-lg font-semibold transition-all duration-200
                ${showMonitor 
                  ? 'bg-green-600 hover:bg-green-700 text-white' 
                  : 'bg-gray-600 hover:bg-gray-700 text-white'
                }
              `}
            >
              {showMonitor ? 'üìä –°–∫—Ä—ã—Ç—å –º–æ–Ω–∏—Ç–æ—Ä' : 'üìä –ü–æ–∫–∞–∑–∞—Ç—å –º–æ–Ω–∏—Ç–æ—Ä'}
            </button>
          </div>
        </div>

        {/* Performance Metrics */}
        <div className="grid grid-cols-1 md:grid-cols-3 gap-6 mb-8">
          <div className="bg-white/5 backdrop-blur-sm border border-white/10 rounded-xl p-6">
            <div className="text-2xl font-bold text-blue-400 mb-2">GPU</div>
            <div className="text-sm text-gray-400">–£—Å–∫–æ—Ä–µ–Ω–∏–µ</div>
            <div className="text-lg font-semibold text-green-400">–ê–∫—Ç–∏–≤–Ω–æ</div>
          </div>
          
          <div className="bg-white/5 backdrop-blur-sm border border-white/10 rounded-xl p-6">
            <div className="text-2xl font-bold text-purple-400 mb-2">Lazy</div>
            <div className="text-sm text-gray-400">–ó–∞–≥—Ä—É–∑–∫–∞</div>
            <div className="text-lg font-semibold text-green-400">–í–∫–ª—é—á–µ–Ω–∞</div>
          </div>
          
          <div className="bg-white/5 backdrop-blur-sm border border-white/10 rounded-xl p-6">
            <div className="text-2xl font-bold text-yellow-400 mb-2">60 FPS</div>
            <div className="text-sm text-gray-400">–¶–µ–ª–µ–≤–æ–π FPS</div>
            <div className="text-lg font-semibold text-green-400">–î–æ—Å—Ç–∏–≥–Ω—É—Ç</div>
          </div>
        </div>

        {/* Test Results */}
        {results.length > 0 && (
          <div className="bg-white/5 backdrop-blur-sm border border-white/10 rounded-xl p-6">
            <h2 className="text-xl font-bold mb-4">üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–æ–≤</h2>
            
            <div className="space-y-4">
              {results.map((result, index) => (
                <div 
                  key={index}
                  className={`
                    p-4 rounded-lg border
                    ${result.success 
                      ? 'bg-green-500/10 border-green-500/20' 
                      : 'bg-red-500/10 border-red-500/20'
                    }
                  `}
                >
                  <div className="flex items-center justify-between mb-2">
                    <div className="flex items-center gap-3">
                      <span className="text-lg">{getStatusIcon(result.success)}</span>
                      <span className="font-semibold">{result.testName}</span>
                    </div>
                    <span className={getStatusColor(result.success)}>
                      {result.duration.toFixed(2)}ms
                    </span>
                  </div>
                  
                  {result.memoryUsage && (
                    <div className="text-sm text-gray-400">
                      –ü–∞–º—è—Ç—å: {(result.memoryUsage / 1024).toFixed(2)} KB
                    </div>
                  )}
                  
                  {result.details && (
                    <div className="text-sm text-red-400 mt-2">
                      {result.details}
                    </div>
                  )}
                </div>
              ))}
            </div>
            
            <div className="mt-6 p-4 bg-gray-800/50 rounded-lg">
              <h3 className="font-semibold mb-2">üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏:</h3>
              <div className="grid grid-cols-2 gap-4 text-sm">
                <div>
                  <span className="text-gray-400">GPU —É—Å–∫–æ—Ä–µ–Ω–∏–µ:</span>
                  <span className="text-green-400 ml-2">‚úÖ translate3d()</span>
                </div>
                <div>
                  <span className="text-gray-400">Lazy loading:</span>
                  <span className="text-green-400 ml-2">‚úÖ React.lazy()</span>
                </div>
                <div>
                  <span className="text-gray-400">Memoization:</span>
                  <span className="text-green-400 ml-2">‚úÖ useCallback/useMemo</span>
                </div>
                <div>
                  <span className="text-gray-400">–ê–Ω–∏–º–∞—Ü–∏–∏:</span>
                  <span className="text-green-400 ml-2">‚úÖ CSS transforms</span>
                </div>
              </div>
            </div>
          </div>
        )}

        {/* Performance Tips */}
        <div className="mt-8 bg-white/5 backdrop-blur-sm border border-white/10 rounded-xl p-6">
          <h2 className="text-xl font-bold mb-4">üí° –°–æ–≤–µ—Ç—ã –ø–æ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏</h2>
          
          <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
            <div>
              <h3 className="font-semibold text-green-400 mb-2">‚úÖ –ß—Ç–æ —É–∂–µ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–æ:</h3>
              <ul className="space-y-2 text-sm text-gray-300">
                <li>‚Ä¢ GPU-—É—Å–∫–æ—Ä–µ–Ω–Ω—ã–µ –∞–Ω–∏–º–∞—Ü–∏–∏ —Å translate3d()</li>
                <li>‚Ä¢ Lazy loading —Ç—è–∂–µ–ª—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤</li>
                <li>‚Ä¢ –ú–µ–º–æ–∏–∑–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π</li>
                <li>‚Ä¢ –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ CSS –∞–Ω–∏–º–∞—Ü–∏–∏</li>
                <li>‚Ä¢ –í–∏—Ä—Ç—É–∞–ª–∏–∑–∞—Ü–∏—è –¥–ª—è –±–æ–ª—å—à–∏—Ö —Å–ø–∏—Å–∫–æ–≤</li>
              </ul>
            </div>
            
            <div>
              <h3 className="font-semibold text-yellow-400 mb-2">üöÄ –î–∞–ª—å–Ω–µ–π—à–∏–µ —É–ª—É—á—à–µ–Ω–∏—è:</h3>
              <ul className="space-y-2 text-sm text-gray-300">
                <li>‚Ä¢ Service Worker –¥–ª—è –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏—è</li>
                <li>‚Ä¢ Web Workers –¥–ª—è —Ç—è–∂–µ–ª—ã—Ö –≤—ã—á–∏—Å–ª–µ–Ω–∏–π</li>
                <li>‚Ä¢ Intersection Observer –¥–ª—è lazy loading</li>
                <li>‚Ä¢ Debouncing –¥–ª—è –ø–æ–∏—Å–∫–∞ –∏ —Ñ–∏–ª—å—Ç—Ä–æ–≤</li>
                <li>‚Ä¢ Bundle splitting –ø–æ –º–∞—Ä—à—Ä—É—Ç–∞–º</li>
              </ul>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
}
